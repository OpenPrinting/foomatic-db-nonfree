*PPD-Adobe: "4.3"
*%=============================================================================
*%
*%  PPD for Kyocera FS-5900C (German)
*%  Linux Version
*%
*%  Copyright (C) 2000 KYOCERA CORPORATION
*%  Copyright (C) 2005 Revised Edition KYOCERA MITA CORPORATION
*%
*%  Permission is hereby granted, free of charge, to any person obtaining
*%  a copy of this software and associated documentation files (the
*%  "Software"), to deal in the Software without restriction, including
*%  without limitation the rights to use, copy, modify, merge, publish,
*%  distribute, sublicense, and/or sell copies of the Software, and to
*%  permit persons to whom the Software is furnished to do so, subject to
*%  the following conditions:
*%
*%  The above copyright notice and this permission notice shall be
*%  included in all copies or substantial portions of the Software.
*%
*%  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
*%  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
*%  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
*%  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
*%  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
*%  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
*%  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*%
*%  [this is the MIT open source license -- see www.opensource.org]
*%
*%=============================================================================

*FileVersion: "8.2"
*FormatVersion: "4.3"
*LanguageEncoding: ISOLatin1 
*PCFileName: "KC590CDE.PPD"
*LanguageVersion: German
*Product: "(FS-5900C)"
*PSVersion: "(2014.108) 1"
*Manufacturer: "Kyocera"
*ModelName: "Kyocera FS-5900C"
*ShortNickName: "Kyocera FS-5900C"
*NickName: "Kyocera FS-5900C"

*% Basic Device Capabilities
*LanguageLevel: "2"
*ColorDevice: True
*DefaultColorSpace: CMYK
*AccurateScreensSupport: True
*TTRasterizer: Type42
*?TTRasterizer: "
  save
  42 /FontType resourcestatus
  { pop pop (Type42) }{ (None) } ifelse
  = flush restore"
*End
*FreeVM: "39168000"
*Throughput: "4"

*% Extensions
*FileSystem: True
*?FileSystem: "
  save
  false
  (%disk?%)
  {currentdevparams dup /Writeable known
    {/Writeable get {pop true} if}{pop} ifelse
  } 100 string /IODevice resourceforall
  {(True)}{(False)} ifelse
  = flush restore "
*End

*% System Management
*SuggestedJobTimeout: "0"
*SuggestedManualFeedTimeout: "0"
*SuggestedWaitTimeout: "120"
*PrintPSErrors: True

*Password: "0"

*ExitServer: "
  count 0 eq {true}
  {dup statusdict /checkpassword get exec not} ifelse
  {(WARNING : Cannot perform the exitserver command.) =
    (Password supplied is not valid.) =
    (Please contact the author of this software.) = flush quit} if
  serverdict /exitserver get exec"
*End

*Reset: "
  count 0 eq { true }
  {dup statusdict /checkpassword get exec not} ifelse
  {(WARNING : Cannot perform the exitserver command.) =
    (Password supplied is not valid.) =
    (Please contact the author of this software.) = flush quit} if
  serverdict /exitserver get exec
  systemdict /quit get exec
  (WARNING : Printer Reset Failed.) = flush"
*End

*% Protocols
*Protocols: PJL TBCP

*1284Modes Parallel: Compat Nibble ECP
*1284DeviceID: "MFG:Kyocera;Model:Kyocera FS-5900C;COMMAND SET: POSTSCRIPT,PJL,PCL"

*% JCL Information 
*JCLBegin: "<1B>%-12345X@PJL JOB<0A>"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE=POSTSCRIPT<0A>"
*JCLEnd: "<1B>%-12345X@PJL EOJ<0A><1B>%-12345X"

*JCLOpenUI *JCLEconomode/EcoPrint: PickOne
*DefaultJCLEconomode: Off
*OrderDependency: 5 JCLSetup *JCLEconomode
*JCLEconomode Off/Aus: "@PJL SET ECONOMODE=OFF<0A>"
*JCLEconomode On/Ein: "@PJL SET ECONOMODE=ON<0A>"
*JCLCloseUI: *JCLEconomode

*% Installable Options
*OpenGroup: InstallableOptions/Installierte Optionen

*% Paper Feeder
*OpenUI *Option15/Papierzuf<FC>hrung: Boolean
*DefaultOption15: False
*Option15 False/Nicht installiert: ""
*Option15 True/Installiert: ""
*?Option15: "
  save
  (False) currentpagedevice dup /InputAttributes known {
    /InputAttributes get
    dup 1 known {dup 1 get null ne {exch pop (True) exch} if} if
  } if pop
  = flush restore"
*End
*CloseUI: *Option15

*% Duplex Unit
*OpenUI *Option16/Duplexeinheit: Boolean
*DefaultOption16: False
*Option16 False/Nicht installiert: ""
*Option16 True/Installiert: ""
*?Option16: "
  save
  currentpagedevice /Duplex known {(True)}{(False)} ifelse
  = flush restore"
*End
*CloseUI: *Option16

*% Disk Drive
*OpenUI *Option18/Optionaler Datentr<E4>ger: PickOne
*DefaultOption18: None
*Option18 None/Keine: ""
*Option18 HardDisk/Festplatte: ""
*Option18 RAMDisk/RAM Disk: ""
*?Option18: "
  save
  false
  (%disk?%)
  {currentdevparams dup /Writeable known
    {dup /Writeable get
      {exch pop /LogicalSize get dup 0 gt exch 102400 lt eq true}{pop pop false} ifelse
    }{pop pop} ifelse
  } 100 string /IODevice resourceforall
  {{(RAMDisk)}{(HardDisk)} ifelse}{(None)} ifelse
  = flush restore"
*End
*CloseUI: *Option18

*% Installed Memory
*OpenUI *InstalledMemory/Speicher: PickOne
*DefaultInstalledMemory: 48MB
*InstalledMemory 48MB/Standard: ""
*InstalledMemory 52MB/4MB Erweiterung: ""
*InstalledMemory 56MB/8MB Erweiterung: ""
*InstalledMemory 60MB/12MB Erweiterung: ""
*InstalledMemory 64MB/16MB Erweiterung: ""
*InstalledMemory 68MB/20MB Erweiterung: ""
*InstalledMemory 72MB/24MB Erweiterung: ""
*InstalledMemory 80MB/32MB Erweiterung: ""
*InstalledMemory 84MB/36MB Erweiterung: ""
*InstalledMemory 88MB/40MB Erweiterung: ""
*InstalledMemory 96MB/48MB Erweiterung: ""
*InstalledMemory 112MB/64MB Erweiterung: ""
*?InstalledMemory: "
  save
  currentsystemparams dup
  /RamSize known {
    /RamSize get
    524288 div ceiling cvi 2 div cvi
    /vmsize 20 string def
    vmsize cvs print
    (MB) print (\n) print flush
  }{
    pop (Unknown) print flush
  } ifelse
  restore"
*End
*CloseUI: *InstalledMemory

*CloseGroup: InstallableOptions

*% Virtual Memory 
*VMOption 48MB: "39168000"
*VMOption 52MB: "42528000"
*VMOption 56MB: "45888000"
*VMOption 60MB: "49350000"
*VMOption 64MB: "52642000"
*VMOption 68MB: "55968000"
*VMOption 72MB: "59328000"
*VMOption 80MB: "59328000"
*VMOption 84MB: "59328000"
*VMOption 88MB: "59328000"
*VMOption 96MB: "59328000"
*VMOption 112MB: "59328000"


*% Constraints
*UIConstraints: *Option15 False *InputSlot PF81A
*UIConstraints: *InputSlot PF81A *Option15 False
*UIConstraints: *Option15 False *InputSlot PF81B
*UIConstraints: *InputSlot PF81B *Option15 False
*UIConstraints: *Duplex *Option16 False
*UIConstraints: *Option16 False *Duplex DuplexTumble
*UIConstraints: *Option16 False *Duplex DuplexNoTumble
*UIConstraints: *Option16 True *InputSlot Internal
*UIConstraints: *InputSlot Internal *Option16 True
*NonUIConstraints: *Duplex *CustomPageSize
*NonUIConstraints: *CustomPageSize *Duplex
*UIConstraints: *KCCollate *Option18 None
*UIConstraints: *Option18 None *KCCollate Temp0
*UIConstraints: *Option18 None *KCCollate Temp
*UIConstraints: *Option18 None *KCCollate Perm
*UIConstraints: *Option18 RAMDisk *KCCollate Perm
*UIConstraints: *KCCollate Perm *Option18 RAMDisk
*UIConstraints: *Option18 HardDisk *KCCollate Temp0
*UIConstraints: *KCCollate Temp0 *Option18 HardDisk
*UIConstraints: *Option18 RAMDisk *KCCollate Temp
*UIConstraints: *KCCollate Temp *Option18 RAMDisk
*UIConstraints: *KCBarcodeMode *Option18 RAMDisk
*UIConstraints: *Option18 RAMDisk *KCBarcodeMode First
*UIConstraints: *Option18 RAMDisk *KCBarcodeMode All
*UIConstraints: *Option18 None *KCCollate VMBAdmin
*UIConstraints: *Option18 None *KCCollate VMBUser01
*UIConstraints: *Option18 None *KCCollate VMBUser02
*UIConstraints: *Option18 None *KCCollate VMBUser03
*UIConstraints: *Option18 None *KCCollate VMBUser04
*UIConstraints: *Option18 None *KCCollate VMBUser05
*UIConstraints: *Option18 None *KCCollate VMBUser06
*UIConstraints: *Option18 None *KCCollate VMBUser07
*UIConstraints: *Option18 None *KCCollate VMBUser08
*UIConstraints: *Option18 None *KCCollate VMBUser09
*UIConstraints: *Option18 None *KCCollate VMBUser10
*UIConstraints: *Option18 RAMDisk *KCCollate VMBAdmin
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser01
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser02
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser03
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser04
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser05
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser06
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser07
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser08
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser09
*UIConstraints: *Option18 RAMDisk *KCCollate VMBUser10
*UIConstraints: *KCCollate VMBAdmin *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser01 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser02 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser03 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser04 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser05 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser06 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser07 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser08 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser09 *Option18 RAMDisk
*UIConstraints: *KCCollate VMBUser10 *Option18 RAMDisk
*UIConstraints: *KCBarcodeMode *KCCollate VMBAdmin
*UIConstraints: *KCCollate VMBAdmin *KCBarcodeMode First
*UIConstraints: *KCCollate VMBAdmin *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser01
*UIConstraints: *KCCollate VMBUser01 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser01 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser02
*UIConstraints: *KCCollate VMBUser02 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser02 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser03
*UIConstraints: *KCCollate VMBUser03 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser03 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser04
*UIConstraints: *KCCollate VMBUser04 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser04 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser05
*UIConstraints: *KCCollate VMBUser05 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser05 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser06
*UIConstraints: *KCCollate VMBUser06 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser06 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser07
*UIConstraints: *KCCollate VMBUser07 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser07 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser08
*UIConstraints: *KCCollate VMBUser08 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser08 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser09
*UIConstraints: *KCCollate VMBUser09 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser09 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate VMBUser10
*UIConstraints: *KCCollate VMBUser10 *KCBarcodeMode First
*UIConstraints: *KCCollate VMBUser10 *KCBarcodeMode All
*UIConstraints: *KCBarcodeMode *KCCollate None
*UIConstraints: *KCCollate None *KCBarcodeMode First
*UIConstraints: *KCCollate None *KCBarcodeMode All
*UIConstraints: *PageSize Executive *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion Executive
*UIConstraints: *PageSize B5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize B5
*UIConstraints: *PageRegion B5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion B5
*UIConstraints: *PageSize ISOB5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize ISOB5
*UIConstraints: *PageRegion ISOB5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion ISOB5
*UIConstraints: *PageSize Executive *InputSlot PF81A
*UIConstraints: *InputSlot PF81A *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot PF81A
*UIConstraints: *InputSlot PF81A *PageRegion Executive
*UIConstraints: *PageSize B5 *InputSlot PF81A
*UIConstraints: *InputSlot PF81A *PageSize B5
*UIConstraints: *PageRegion B5 *InputSlot PF81A
*UIConstraints: *InputSlot PF81A *PageRegion B5
*UIConstraints: *PageSize Executive *InputSlot PF81B
*UIConstraints: *InputSlot PF81B *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot PF81B
*UIConstraints: *InputSlot PF81B *PageRegion Executive
*UIConstraints: *PageSize B5 *InputSlot PF81B
*UIConstraints: *InputSlot PF81B *PageSize B5
*UIConstraints: *PageRegion B5 *InputSlot PF81B
*UIConstraints: *InputSlot PF81B *PageRegion B5
*UIConstraints: *Duplex *PageSize Executive
*UIConstraints: *PageSize Executive *Duplex DuplexTumble
*UIConstraints: *PageSize Executive *Duplex DuplexNoTumble
*UIConstraints: *Duplex *PageRegion Executive
*UIConstraints: *PageRegion Executive *Duplex DuplexTumble
*UIConstraints: *PageRegion Executive *Duplex DuplexNoTumble
*UIConstraints: *KCPantone PantCorrected *Resolution 1200dpi
*UIConstraints: *Resolution 1200dpi *KCPantone PantCorrected
*UIConstraints: *KCINKSimulation Toyo *Resolution 600dpi
*UIConstraints: *Resolution 600dpi *KCINKSimulation Toyo
*UIConstraints: *KCINKSimulation *KCPantone PantCorrected
*UIConstraints: *KCPantone PantCorrected *KCINKSimulation Euro
*UIConstraints: *KCPantone PantCorrected *KCINKSimulation Swop
*UIConstraints: *KCPantone PantCorrected *KCINKSimulation Toyo
*UIConstraints: *KCPantone PantCorrected *KCINKSimulation Dic
*UIConstraints: *KCRGBSimulation None *KCPantone PantCorrected
*UIConstraints: *KCRGBSimulation SMPTE240M *KCPantone PantCorrected
*UIConstraints: *KCRGBSimulation Trinitron *KCPantone PantCorrected
*UIConstraints: *KCRGBSimulation AppleRGB *KCPantone PantCorrected
*UIConstraints: *KCRGBSimulation NTSC *KCPantone PantCorrected
*UIConstraints: *KCPantone PantCorrected *KCRGBSimulation None
*UIConstraints: *KCPantone PantCorrected *KCRGBSimulation SMPTE240M
*UIConstraints: *KCPantone PantCorrected *KCRGBSimulation Trinitron
*UIConstraints: *KCPantone PantCorrected *KCRGBSimulation AppleRGB
*UIConstraints: *KCPantone PantCorrected *KCRGBSimulation NTSC
*UIConstraints: *KCPantone *KCVividColor True
*UIConstraints: *KCVividColor True *KCPantone PantCorrected
*UIConstraints: *KCVividColor True *KCPantone AppCorrected

*% Resolution 
*OpenUI *Resolution/Aufl<F6>sung: PickOne
*OrderDependency: 10 AnySetup *Resolution
*DefaultResolution: 600dpi
*Resolution 600dpi/600 dpi: "<< /HWResolution [600 600] >> setpagedevice"
*Resolution 1200dpi/1200 dpi: "<< /HWResolution [1200 1200] >> setpagedevice"
*?Resolution: "save currentpagedevice /HWResolution get 0 get (      ) cvs print (dpi) = flush restore"
*CloseUI: *Resolution

*% Color Model
*OpenUI *ColorModel/Farbmodus: PickOne
*OrderDependency: 10 AnySetup *ColorModel
*DefaultColorModel: CMYK
*ColorModel CMYK/Proze<DF>-Farbe (CMYK): "<< /ProcessColorModel /DeviceCMYK >> setpagedevice"
*ColorModel CMY/Schnelle Farbe (CMY): "<< /ProcessColorModel /DeviceCMY >> setpagedevice"
*ColorModel Gray/Monochrom: "<< /ProcessColorModel /DeviceGray >> setpagedevice"
*?ColorModel: "
  save
  currentpagedevice /ProcessColorModel get
  1 {
    dup /DeviceGray eq {pop (Gray) exit} if
    dup /DeviceCMYK eq {pop (CMYK) exit} if
    dup /DeviceCMY eq {pop (CMY) exit} if
    pop (Unknown)
  } repeat
  = flush restore"
*End
*CloseUI: *ColorModel

*% Embedded Pantone
*OpenUI *KCPantone/Farbkorrektur: PickOne
*OrderDependency: 10 AnySetup *KCPantone
*DefaultKCPantone: None
*KCPantone PantCorrected/Pantone<AE>: ""
*KCPantone AppCorrected/Anwendung korrigiert: ""
*KCPantone None/Drucker korrigiert: ""
*CloseUI: *KCPantone

*% Ink Simulation
*OpenUI *KCINKSimulation/Tintensimulation (CMYK): PickOne
*OrderDependency: 10 AnySetup *KCINKSimulation
*DefaultKCINKSimulation: None
*KCINKSimulation None/Keine: "null <</DeviceRenderingCMYKInfo <</VirtualColorDevice 5 -1 roll>> >> setpagedevice"
*KCINKSimulation Euro/Euroscale Press: "/EURO <</DeviceRenderingCMYKInfo <</VirtualColorDevice <</ColorTransform 7 -1 roll>> >> >> setpagedevice"
*KCINKSimulation Swop/SWOP Press: "/SWOP <</DeviceRenderingCMYKInfo <</VirtualColorDevice <</ColorTransform 7 -1 roll>> >> >> setpagedevice"
*KCINKSimulation Toyo/TOYO: "/TOYO dup /DeviceRenderingCMYKInfo resourcestatus { pop pop <</DeviceRenderingCMYKInfo <</VirtualColorDevice <</ColorTransform 7 -1 roll>> >> >> setpagedevice} { pop pop } ifelse"
*KCINKSimulation Dic/DIC: "/DIC dup /DeviceRenderingCMYKInfo resourcestatus { pop pop <</DeviceRenderingCMYKInfo <</VirtualColorDevice <</ColorTransform 7 -1 roll>> >> >> setpagedevice} { pop pop } ifelse"
*?KCINKSimulation: "
  save
  currentpagedevice dup /DeviceRenderingCMYKInfo known {
    /DeviceRenderingCMYKInfo get /VirtualColorDevice get /ColorTransform get
    dup type /dicttype eq {
      1 {
        dup /EURO eq {pop (Euro) exit} if
        dup /SWOP eq {pop (Swop) exit} if
        dup /TOYO eq {pop (Toyo) exit} if
        dup /DIC eq {pop (Dic) exit} if
        pop (None)
      } repeat
    } pop (None)} ifelse
  }{pop (Unknown)} ifelse
  = flush restore"
*End
*CloseUI: *KCINKSimulation

*% RGB Simulation
*OpenUI *KCRGBSimulation/Monitorsimulation (RGB): PickOne
*OrderDependency: 10 AnySetup *KCRGBSimulation
*DefaultKCRGBSimulation: sRGB
*KCRGBSimulation SMPTE240M/SMPTE240M: "<</DeviceRenderingRGBInfo <</VirtualColorDevice <</ColorTransform /SMPTE240M>> >> >> setpagedevice"
*KCRGBSimulation sRGB/sRGB (HDTV): "<</DeviceRenderingRGBInfo <</VirtualColorDevice <</ColorTransform /sRGB>> >> >> setpagedevice"
*KCRGBSimulation Trinitron/Trinitron: "<</DeviceRenderingRGBInfo <</VirtualColorDevice <</ColorTransform /Trinitron>> >> >> setpagedevice"
*KCRGBSimulation AppleRGB/Apple RGB: "<</DeviceRenderingRGBInfo <</VirtualColorDevice <</ColorTransform /AppleRGB>> >> >> setpagedevice"
*KCRGBSimulation NTSC/NTSC: "<</DeviceRenderingRGBInfo <</VirtualColorDevice <</ColorTransform /NTSC>> >> >> setpagedevice"
*KCRGBSimulation None/Keine: "<</DeviceRenderingRGBInfo <</VirtualColorDevice null>> >> setpagedevice"
*?KCRGBSimulation: "
  save
  currentpagedevice dup /DeviceRenderingRGBInfo known {
    /DeviceRenderingRGBInfo get /VirtualColorDevice get /ColorTransform get
    1 {
      dup /SMPTE240M eq {pop (SMPTE240M) exit} if
      dup /sRGB eq {pop (sRGB) exit} if
      dup /Trinitron eq {pop (Trinitron) exit} if
      dup /AppleRGB eq {pop (AppleRGB) exit} if
      dup /NTSC eq {pop (NTSC) exit} if
      pop (None)
    } repeat
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCRGBSimulation

*% VividColor
*OpenUI *KCVividColor/Lebhafte Farben: Boolean
*OrderDependency: 10 AnySetup *KCVividColor
*DefaultKCVividColor: False
*KCVividColor False/Off: "<< /DeviceRenderingVividInfo << /VividColor false >> >> setpagedevice"
*KCVividColor True/On: "<< /DeviceRenderingVividInfo << /VividColor true >> >> setpagedevice"
*?KCVividColor: "
  save
  currentpagedevice dup /DeviceRenderingVividInfo known {
    /DeviceRenderingVividInfo get /VividColor get
    {(True)}{(False)} ifelse
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCVividColor
*% Halftone Information 
*DefaultHalftoneType: 1
*ScreenFreq: "75.0"
*ScreenAngle: "45.0"
*ResScreenFreq 1200dpi: "75.0"
*ResScreenAngle 1200dpi: "45.0"
*ResScreenFreq 600dpi: "37.5"
*ResScreenAngle 600dpi: "45.0"

*DefaultScreenProc: Ellipse
*ScreenProc Dot: "
  {abs exch abs 2 copy add 1 gt
  {1 sub dup mul exch 1 sub dup mul add 1 sub}
  {dup mul exch dup mul add 1 exch sub} ifelse}"
*End
*ScreenProc Line: "{pop}"
*ScreenProc Ellipse: "{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}"
*DefaultTransfer: Null
*Transfer Null: "{}"
*Transfer Null.Inverse: "{1 exch sub}"

*% Paper Handling 
*% Page Size Definitions
*OpenUI *PageSize: PickOne
*OrderDependency: 40 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize A4/A4: "<< /Policies << /PageSize 7 >> /PageSize [595 842] /ImagingBBox null >> setpagedevice"
*PageSize B5/B5 (JIS): "<< /Policies << /PageSize 7 >> /PageSize [516 729] /ImagingBBox null >> setpagedevice"
*PageSize ISOB5/B5 (ISO): "<< /Policies << /PageSize 7 >> /PageSize [499 709] /ImagingBBox null >> setpagedevice"
*PageSize Letter/US-Letter: "<< /Policies << /PageSize 7 >> /PageSize [612 792] /ImagingBBox null >> setpagedevice"
*PageSize Legal/US-Legal: "<< /Policies << /PageSize 7 >> /PageSize [612 1008] /ImagingBBox null >> setpagedevice"
*PageSize Executive/US-Executive: "<< /Policies << /PageSize 7 >> /PageSize [522 756] /ImagingBBox null >> setpagedevice"
*?PageSize: "
  save
  currentpagedevice /PageSize get aload pop
  2 copy gt {exch} if
  (Unknown)
  6 dict
  dup [595 842] (A4) put
  dup [516 729] (B5) put
  dup [499 709] (ISOB5) put
  dup [612 792] (Letter) put
  dup [612 1008] (Legal) put
  dup [522 756] (Executive) put
  {exch aload pop 4 index sub abs 5 le exch
    5 index sub abs 5 le and
    {exch pop exit}{pop} ifelse
  } bind forall
  = flush pop pop restore "
*End
*CloseUI: *PageSize

*% Page Region Definitions for Frame Buffer
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion A4/A4: "<< /Policies << /PageSize 7 >> /PageSize [595 842] /ImagingBBox null >> setpagedevice"
*PageRegion B5/B5 (JIS): "<< /Policies << /PageSize 7 >> /PageSize [516 729] /ImagingBBox null >> setpagedevice"
*PageRegion ISOB5/B5 (ISO): "<< /Policies << /PageSize 7 >> /PageSize [499 709] /ImagingBBox null >> setpagedevice"
*PageRegion Letter/US-Letter: "<< /Policies << /PageSize 7 >> /PageSize [612 792] /ImagingBBox null >> setpagedevice"
*PageRegion Legal/US-Legal: "<< /Policies << /PageSize 7 >> /PageSize [612 1008] /ImagingBBox null >> setpagedevice"
*PageRegion Executive/US-Executive: "<< /Policies << /PageSize 7 >> /PageSize [522 756] /ImagingBBox null >> setpagedevice"
*CloseUI: *PageRegion

*% Imageable Area Definitions
*DefaultImageableArea: A4
*ImageableArea A4/A4: "12 10 583 832"
*ImageableArea B5/B5 (JIS): "21 10 495 719"
*ImageableArea ISOB5/B5 (ISO): "12 12 487 696"
*ImageableArea Letter/US-Letter: "12 08 600 784"
*ImageableArea Legal/US-Legal: "12 08 600 1000"
*ImageableArea Executive/US-Executive: "12 08 510 748"
*?ImageableArea: "
  save
  /cvp {cvi (                   ) cvs
  print ( ) print} bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat ( )
  = flush restore"
*End

*% Physical Dimensions of Media
*DefaultPaperDimension: A4
*PaperDimension A4/A4: "595 842"
*PaperDimension B5/B5 (JIS): "516 729"
*PaperDimension ISOB5/B5 (ISO): "499 709"
*PaperDimension Letter/US-Letter: "612 792"
*PaperDimension Legal/US-Legal: "612 1008"
*PaperDimension Executive/US-Executive: "522 756"

*% Custom Page Size Definitions
*% Smallest = A5, Largest = LEGAL

*VariablePaperSize: True
*LeadingEdge Short: ""
*DefaultLeadingEdge: Short
*HWMargins: 12 12 12 12
*MaxMediaWidth: "612"
*MaxMediaHeight: "1008"
*NonUIOrderDependency: 20 AnySetup *CustomPageSize
*CustomPageSize True: "
  pop pop pop
  << /PageSize [ 5 -2 roll ] /ImagingBBox null
     /Policies << /PageSize 3 >>
  >> setpagedevice"
*End
*ParamCustomPageSize Width: 1 points 421 612
*ParamCustomPageSize Height: 2 points 595 1008
*ParamCustomPageSize WidthOffset: 3 points 0 0
*ParamCustomPageSize HeightOffset: 4 points 0 0
*ParamCustomPageSize Orientation: 5 int 0 3

*% Input Slot Definitions
*OpenUI *InputSlot: PickOne
*OrderDependency: 30 AnySetup *InputSlot
*DefaultInputSlot: Internal
*InputSlot Internal/Kassette 1 (Intern): "<</ManualFeed false>> setpagedevice statusdict begin 0 setpapertray end"
*InputSlot PF81A/Kassette 2: "<</ManualFeed false>> setpagedevice statusdict begin 1 setpapertray end"
*InputSlot PF81B/Kassette 3: "<</ManualFeed false>> setpagedevice statusdict begin 4 setpapertray end"
*InputSlot MF1/Mehrzweckzufuhr: "currentpagedevice /InputAttributes get 3 get null eq
{ <</ManualFeed true>> setpagedevice }{ statusdict begin 3 setpapertray end } ifelse"
*End
*InputSlot MF/Papierzufuhr Handeinzug: "<< /ManualFeed true >> setpagedevice"
*?InputSlot: ""
*CloseUI: *InputSlot

*% MediaType Definitions
*OpenUI *MediaType: PickOne
*OrderDependency: 100 AnySetup *MediaType
*DefaultMediaType: PrnDef
*MediaType PrnDef/Standard: ""
*MediaType Plain/Normalpapier: "<</ManualFeed false /MediaType (Plain) /DeferredMediaSelection true >> setpagedevice"
*MediaType Transparency/ Folien: "<</ManualFeed false /MediaType (Transparency) /DeferredMediaSelection true >> setpagedevice"
*MediaType Labels/Etiketten: "<</ManualFeed false /MediaType (Labels) /DeferredMediaSelection true >> setpagedevice"
*MediaType Duplex/Duplex Papier: "<</ManualFeed false /MediaType (Duplex) /DeferredMediaSelection true >> setpagedevice"
*MediaType Cardstock/Karteikarte: "<</ManualFeed false /MediaType (Card Stock) /DeferredMediaSelection true >> setpagedevice"
*MediaType CoatedPaper/Beschichtetes Papier: "<</ManualFeed false /MediaType (CoatedPaper) /DeferredMediaSelection true >> setpagedevice"
*MediaType User1/Anwender 1: "<</ManualFeed false /MediaType (Custom Type1) /DeferredMediaSelection true >> setpagedevice"
*MediaType User2/Anwender 2: "<</ManualFeed false /MediaType (Custom Type2) /DeferredMediaSelection true >> setpagedevice"
*MediaType User3/Anwender 3: "<</ManualFeed false /MediaType (Custom Type3) /DeferredMediaSelection true >> setpagedevice"
*MediaType User4/Anwender 4: "<</ManualFeed false /MediaType (Custom Type4) /DeferredMediaSelection true >> setpagedevice"
*MediaType User5/Anwender 5: "<</ManualFeed false /MediaType (Custom Type5) /DeferredMediaSelection true >> setpagedevice"
*MediaType User6/Anwender 6: "<</ManualFeed false /MediaType (Custom Type6) /DeferredMediaSelection true >> setpagedevice"
*MediaType User7/Anwender 7: "<</ManualFeed false /MediaType (Custom Type7) /DeferredMediaSelection true >> setpagedevice"
*MediaType User8/Anwender 8: "<</ManualFeed false /MediaType (Custom Type8) /DeferredMediaSelection true >> setpagedevice"
*?MediaType: "
  save
    currentpagedevice /MediaType {get} stopped
    {pop pop (Unknown)} {dup null eq {pop (Unknown)} if} ifelse = flush
  restore"
*End
*CloseUI: *MediaType

*RequiresPageRegion All: True
*% Output Bin Definitions
*OpenUI *OutputBin/Ausgabefach: PickOne
*OrderDependency: 51 AnySetup *OutputBin
*DefaultOutputBin: FDSide
*OutputBin FDSide/Seitliche Ablage (Nach unten): "0 statusdict /setoutputtray get exec"
*OutputBin FUSide/Seitliche Ablage (Nach oben): "1 statusdict /setoutputtray get exec"
*?OutputBin: ""
*CloseUI: *OutputBin

*% Page Stack Order
*PageStackOrder FDSide: Normal
*PageStackOrder FUSide: Normal

*% Duplex Definitions
*OpenUI *Duplex/Duplex: PickOne
*OrderDependency: 50 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/Keine: "statusdict begin false setduplexmode false settumble end"
*Duplex DuplexTumble/Binden Kurze Seite: "statusdict begin true setduplexmode true settumble end"
*Duplex DuplexNoTumble/Binden Lange Seite: "statusdict begin true setduplexmode false settumble end"
*?Duplex: "
  save
  statusdict begin
  duplexmode
  {tumble {(DuplexTumble)}{(DuplexNoTumble)} ifelse}
  {(None)} ifelse
  = flush end restore"
*End
*CloseUI: *Duplex

*% Job Spooling Definitions
*OpenUI *KCCollate/Job Zwischenspeicherung: PickOne
*OrderDependency: 20 AnySetup *KCCollate
*DefaultKCCollate: None
*KCCollate None/Keine: ""
*KCCollate Temp0/Tempor<E4>r (RAM Disk): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Mode 0 put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate Temp/Tempor<E4>r (Festplatte): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Mode 1 put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate Perm/Permanent (Festplatte): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Mode 2 put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBAdmin/Virtuelle Mailbox (Administrator): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(Administrator)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser01/Virtuelle Mailbox (Anwender 1): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 1)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser02/Virtuelle Mailbox (Anwender 2): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 2)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser03/Virtuelle Mailbox (Anwender 3): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 3)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser04/Virtuelle Mailbox (Anwender 4): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 4)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser05/Virtuelle Mailbox (Anwender 5): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 5)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser06/Virtuelle Mailbox (Anwender 6): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 6)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser07/Virtuelle Mailbox (Anwender 7): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 7)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser08/Virtuelle Mailbox (Anwender 8): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 8)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser09/Virtuelle Mailbox (Anwender 9): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 9)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate VMBUser10/Virtuelle Mailbox (Anwender 10): "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get dup /Mode 8 put /Destination [(User 10)] put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*?KCCollate: "
  save
  currentpagedevice dup /Collate known {
    dup /CollateDetails known {
      /CollateDetails get
      dup /Mode known {
        /Mode get
        1 {
          dup 0 eq {pop (Temp0) exit} if
          dup 1 eq {pop (Temp) exit} if
          dup 2 eq {pop (Perm) exit} if
          dup 8 eq {pop (VMB) exit} if
          pop (Unknown)
        } repeat
      }{pop (Unknown)} ifelse
    }{pop (Unknown)} ifelse
  }{pop (Unknown)} ifelse
  = flush restore"
*End
*CloseUI: *KCCollate

*% Barcode Mode Definitions
*OpenUI *KCBarcodeMode/Barcode: PickOne
*OrderDependency: 21 AnySetup *KCBarcodeMode
*DefaultKCBarcodeMode: None
*KCBarcodeMode None/Keine: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Barcode 2  put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodeMode First/Erste Seite: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Barcode 0  put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodeMode All/Alle Seiten: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Barcode 1  put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*?KCBarcodeMode: "
  save
  currentpagedevice dup /CollateDetails known {
    /CollateDetails get /Barcode get
    1 {
      dup 2 eq {pop (None) exit} if
      dup 0 eq {pop (First) exit} if
      dup 1 eq {pop (All) exit} if
      pop (Unknown)
    } repeat
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCBarcodeMode

*% Barcode ID Definitions
*OpenUI *KCBarcodeID/Barcode-Identifikation: Boolean
*OrderDependency: 23 AnySetup *KCBarcodeID
*DefaultKCBarcodeID: False
*KCBarcodeID True/Ein: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodeID False/Aus: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  not put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*?KCBarcodeID: "
  save
  currentpagedevice dup /CollateDetails known {
    /CollateDetails get /BarcodePosition get 128 gt
    {(False)}{(True)} ifelse
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCBarcodeID

*% Barcode Position Definitions
*OpenUI *KCBarcodePos/Barcode-Position: PickOne
*OrderDependency: 22 AnySetup *KCBarcodePos
*DefaultKCBarcodePos: ULB
*KCBarcodePos ULB/Oben Links: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 4 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos URB/Oben Rechts: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 3 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LLB/Unten Links: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 7 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LRB/Unten Rechts: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos ULVB/Oben Links Vertikal: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 5 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos URVB/Oben Rechts Vertikal: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 2 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LLVB/Unten Links Vertikal: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 6 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LRVB/Unten Rechts Vertikal: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 1 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*?KCBarcodePos: "
  save
  currentpagedevice dup /CollateDetails known {
    /CollateDetails get /BarcodePosition get
    1 {
      dup 4 eq {pop (ULB) exit} if
      dup 3 eq {pop (URB) exit} if
      dup 7 eq {pop (LLB) exit} if
      dup 0 eq {pop (LRB) exit} if
      dup 5 eq {pop (ULVB) exit} if
      dup 2 eq {pop (URVB) exit} if
      dup 6 eq {pop (LLVB) exit} if
      dup 1 eq {pop (LRVB) exit} if
      pop (Unknown)
    } repeat
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCBarcodePos

*% Tray Switch Definitions
*OpenUI *TraySwitch/Auto Zufuhrwechsel: PickOne
*OrderDependency: 25 AnySetup *TraySwitch
*DefaultTraySwitch: PrnDef
*TraySwitch PrnDef/Standard: ""
*TraySwitch True/Ein: "<< /TraySwitch true >> setpagedevice"
*TraySwitch False/Aus: "<< /TraySwitch false >> setpagedevice"
*?TraySwitch: "
  save
  currentpagedevice /TraySwitch get
  { (True) }{ (False) } ifelse
  = flush restore"
*End
*CloseUI: *TraySwitch

*% PPD Version Info 
*OpenUI *KMVersion/PPD Version: PickOne
*OrderDependency: 25 AnySetup *KMVersion
*DefaultKMVersion: Default
*KMVersion Default/8.2.0111 [01-11-2005]: "
globaldict /ct_AddStdCIDMap known {
globaldict /ct_AddStdCIDMap get  length 7 eq
{globaldict /ct_AddStdCIDMap get  0 get type /stringtype eq
{globaldict /ct_AddStdCIDMap get  1 get 0 eq
{globaldict /ct_AddStdCIDMap get  2 get () eq
{globaldict /ct_AddStdCIDMap get  3 get /SubFileDecode eq
{globaldict /ct_AddStdCIDMap get  4 get systemdict /filter get eq
{currentglobal true setglobal globaldict
/ct_AddStdCIDMap
globaldict /ct_AddStdCIDMap get dup
globaldict /ct_AddStdCIDMap get
0 get length 1 exch
put put setglobal
} if} if} if} if} if} if} if"
*End
*CloseUI: *KMVersion

*% Font Information
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM
*?FontQuery: "
  save
  /str 100 string dup 0 (fonts/) putinterval def
  {count 1 gt
    { exch dup str 6 94 getinterval cvs
      (/) print print (:) print
      FontDirectory exch known
      {(Yes)}{(No)} ifelse =
    }{exit} ifelse
  } bind loop (*)
  = flush restore"
*End
*?FontList: "save FontDirectory { pop == } bind forall flush (*) = flush restore"
*% Printer Messages
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "warming up"/warming up
*Status: "idle"/idle
*Status: "busy"/busy
*Status: "waiting"/waiting
*Status: "printing"/printing
*Status: "initializing"/initializing
*Status: "printing test page"/printing test page
*% Printer Error (format: %%[ PrinterError: <one of these> ]%% )
*PrinterError: "paper entry misfeed"
*PrinterError: "cover open"
*PrinterError: "no paper tray"
*PrinterError: "out of paper"
*PrinterError: "toner low (halt)"
*PrinterError: "warming up"
*PrinterError: "other reason"
*PrinterError: "video interface mode"
*PrinterError: "offline"
*PrinterError: "toner low (warning)"

*% Input Sources (format: %%[ status: <stat>;source:<one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "Option"

*%  End of PPD file for Kyocera FS-5900C (German)
