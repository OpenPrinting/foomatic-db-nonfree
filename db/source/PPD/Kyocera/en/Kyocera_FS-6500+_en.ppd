*PPD-Adobe: "4.3"
*%=============================================================================
*%
*%  PPD for Kyocera FS-6500+ (English)
*%  Linux Version
*%
*%  Copyright (C) 2000 KYOCERA CORPORATION
*%  Copyright (C) 2005 Revised Edition KYOCERA MITA CORPORATION
*%
*%  Permission is hereby granted, free of charge, to any person obtaining
*%  a copy of this software and associated documentation files (the
*%  "Software"), to deal in the Software without restriction, including
*%  without limitation the rights to use, copy, modify, merge, publish,
*%  distribute, sublicense, and/or sell copies of the Software, and to
*%  permit persons to whom the Software is furnished to do so, subject to
*%  the following conditions:
*%
*%  The above copyright notice and this permission notice shall be
*%  included in all copies or substantial portions of the Software.
*%
*%  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
*%  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
*%  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
*%  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
*%  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
*%  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
*%  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*%
*%  [this is the MIT open source license -- see www.opensource.org]
*%
*%=============================================================================

*FileVersion: "8.2"
*FormatVersion: "4.3"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*Product: "(FS-6500+)"
*PSVersion: "(2014.108) 1"
*Manufacturer: "Kyocera"
*ModelName: "Kyocera FS-6500+"
*ShortNickName: "Kyocera FS-6500+"
*NickName: "Kyocera FS-6500+"
*PCFileName: "KC650PEN.PPD"

*% Basic Device Capabilities
*LanguageLevel: "2"
*ColorDevice: False
*DefaultColorSpace: Gray
*TTRasterizer: Type42
*?TTRasterizer: "
  save
  42 /FontType resourcestatus
  { pop pop (Type42) }{ (None) } ifelse
  = flush restore"
*End
*FreeVM: "1368000"
*Throughput: "12"

*% System Management
*SuggestedJobTimeout: "0"
*SuggestedManualFeedTimeout: "0"
*SuggestedWaitTimeout: "120"
*PrintPSErrors: True

*Password: "0"

*ExitServer: "
  count 0 eq {true}
  {dup statusdict /checkpassword get exec not} ifelse
  {(WARNING : Cannot perform the exitserver command.) =
    (Password supplied is not valid.) =
    (Please contact the author of this software.) = flush quit} if
  serverdict /exitserver get exec"
*End

*Reset: "
  count 0 eq { true }
  {dup statusdict /checkpassword get exec not} ifelse
  {(WARNING : Cannot perform the exitserver command.) =
    (Password supplied is not valid.) =
    (Please contact the author of this software.) = flush quit} if
  serverdict /exitserver get exec
  systemdict /quit get exec
  (WARNING : Printer Reset Failed.) = flush"
*End

*% Protocols
*Protocols: PJL TBCP

*1284Modes Parallel: Compat Nibble ECP
*1284DeviceID: "MFG:Kyocera;Model:Kyocera FS-6500+;COMMAND SET: POSTSCRIPT,PJL,PCL"

*% JCL Information 
*JCLBegin: "<1B>%-12345X@PJL JOB<0A>"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE=POSTSCRIPT<0A>"
*JCLEnd: "<1B>%-12345X@PJL EOJ<0A><1B>%-12345X"

*JCLOpenUI *JCLEconomode/EcoPrint: PickOne
*DefaultJCLEconomode: Off
*OrderDependency: 5 JCLSetup *JCLEconomode
*JCLEconomode Off/Off: "@PJL SET ECONOMODE=OFF<0A>"
*JCLEconomode On/On: "@PJL SET ECONOMODE=ON<0A>"
*JCLCloseUI: *JCLEconomode

*% Installable Options
*OpenGroup: InstallableOptions/Installed Options

*% Optional Feeders
*OpenUI *Option1/Optional Feeder: PickOne
*DefaultOption1: None
*Option1 None/Not Installed: ""
*Option1 EF1/EF-1 Envelope Feeder: ""
*Option1 UF1/UF-1 Universal Feeder: ""
*CloseUI: *Option1

*% Paper Feeders
*OpenUI *Option7/PF-9 Paper Feeders: PickOne
*DefaultOption7: None
*Option7 None/None: ""
*Option7 One/One: ""
*Option7 Two/Two: ""
*?Option7: "
  save
  (None) currentpagedevice dup /InputAttributes known {
    /InputAttributes get
    dup 1 known {dup 1 get null ne {exch pop (One) exch} if} if
    dup 3 known {dup 3 get null ne {exch pop (Two) exch} if} if
  } if pop
  = flush restore"
*End
*CloseUI: *Option7

*% Installed Memory
*OpenUI *InstalledMemory/Memory: PickOne
*DefaultInstalledMemory: 3MB
*InstalledMemory 3MB/Standard: ""
*InstalledMemory 4MB/1MB Upgrade: ""
*InstalledMemory 5MB/2MB Upgrade: ""
*InstalledMemory 6MB/3MB Upgrade: ""
*InstalledMemory 7MB/4MB Upgrade: ""
*InstalledMemory 8MB/5MB Upgrade: ""
*InstalledMemory 10MB/7MB Upgrade: ""
*InstalledMemory 11MB/8MB Upgrade: ""
*InstalledMemory 12MB/9MB Upgrade: ""
*InstalledMemory 14MB/11MB Upgrade: ""
*InstalledMemory 18MB/15MB Upgrade: ""
*InstalledMemory 19MB/16MB Upgrade: ""
*InstalledMemory 20MB/17MB Upgrade: ""
*InstalledMemory 22MB/19MB Upgrade: ""
*InstalledMemory 26MB/23MB Upgrade: ""
*InstalledMemory 34MB/31MB Upgrade: ""
*InstalledMemory 35MB/32MB Upgrade: ""
*InstalledMemory 36MB/33MB Upgrade: ""
*InstalledMemory 38MB/35MB Upgrade: ""
*InstalledMemory 42MB/39MB Upgrade: ""
*InstalledMemory 50MB/47MB Upgrade: ""
*InstalledMemory 66MB/63MB Upgrade: ""
*?InstalledMemory: "
  save
  currentsystemparams dup
  /RamSize known {
    /RamSize get
    524288 div ceiling cvi 2 div cvi
    /vmsize 20 string def
    vmsize cvs print
    (MB) print (\n) print flush
  }{
    pop (Unknown) print flush
  } ifelse
  restore"
*End
*CloseUI: *InstalledMemory

*CloseGroup: InstallableOptions

*% Virtual Memory 
*VMOption 3MB: "1368000"
*VMOption 4MB: "2208000"
*VMOption 5MB: "3048000"
*VMOption 6MB: "3888000"
*VMOption 7MB: "4728000"
*VMOption 8MB: "5568000"
*VMOption 10MB: "7248000"
*VMOption 11MB: "8088000"
*VMOption 12MB: "8928000"
*VMOption 14MB: "10608000"
*VMOption 18MB: "13968000"
*VMOption 19MB: "14808000"
*VMOption 20MB: "15648000"
*VMOption 22MB: "17328000"
*VMOption 26MB: "20688000"
*VMOption 34MB: "27408000"
*VMOption 35MB: "28248000"
*VMOption 36MB: "29088000"
*VMOption 38MB: "30768000"
*VMOption 42MB: "34128000"
*VMOption 50MB: "42528000"
*VMOption 66MB: "54288000"


*% Constraints
*UIConstraints: *Option1 None *InputSlot EF1
*UIConstraints: *InputSlot EF1 *Option1 None
*UIConstraints: *Option1 None *InputSlot UF1
*UIConstraints: *InputSlot UF1 *Option1 None
*UIConstraints: *Option1 EF1 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *Option1 EF1
*UIConstraints: *Option1 UF1 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *Option1 UF1
*UIConstraints: *Option7 None *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *Option7 None
*UIConstraints: *Option7 None *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *Option7 None
*UIConstraints: *Option7 One *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *Option7 One
*UIConstraints: *PageSize Executive *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion Executive
*UIConstraints: *PageSize A6 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize A6
*UIConstraints: *PageRegion A6 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion A6
*UIConstraints: *PageSize B6 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize B6
*UIConstraints: *PageRegion B6 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion B6
*UIConstraints: *PageSize EnvPersonal *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize EnvPersonal
*UIConstraints: *PageRegion EnvPersonal *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion EnvPersonal
*UIConstraints: *PageSize Env9 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize Env9
*UIConstraints: *PageRegion Env9 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion Env9
*UIConstraints: *PageSize Env10 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize Env10
*UIConstraints: *PageRegion Env10 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion Env10
*UIConstraints: *PageSize EnvMonarch *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize EnvMonarch
*UIConstraints: *PageRegion EnvMonarch *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion EnvMonarch
*UIConstraints: *PageSize EnvDL *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize EnvDL
*UIConstraints: *PageRegion EnvDL *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion EnvDL
*UIConstraints: *PageSize EnvC5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize EnvC5
*UIConstraints: *PageRegion EnvC5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion EnvC5
*UIConstraints: *PageSize Letter *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize Letter
*UIConstraints: *PageRegion Letter *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion Letter
*UIConstraints: *PageSize Legal *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize Legal
*UIConstraints: *PageRegion Legal *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion Legal
*UIConstraints: *PageSize Executive *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion Executive
*UIConstraints: *PageSize Tabloid *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion Tabloid
*UIConstraints: *PageSize A3 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize A3
*UIConstraints: *PageRegion A3 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion A3
*UIConstraints: *PageSize A4 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize A4
*UIConstraints: *PageRegion A4 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion A4
*UIConstraints: *PageSize B4 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize B4
*UIConstraints: *PageRegion B4 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion B4
*UIConstraints: *PageSize B5 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageSize B5
*UIConstraints: *PageRegion B5 *InputSlot EF1
*UIConstraints: *InputSlot EF1 *PageRegion B5
*UIConstraints: *PageSize Legal *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize Legal
*UIConstraints: *PageRegion Legal *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion Legal
*UIConstraints: *PageSize Tabloid *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize Tabloid
*UIConstraints: *PageRegion Tabloid *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion Tabloid
*UIConstraints: *PageSize A3 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize A3
*UIConstraints: *PageRegion A3 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion A3
*UIConstraints: *PageSize B4 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize B4
*UIConstraints: *PageRegion B4 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion B4
*UIConstraints: *PageSize EnvPersonal *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize EnvPersonal
*UIConstraints: *PageRegion EnvPersonal *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion EnvPersonal
*UIConstraints: *PageSize Env9 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize Env9
*UIConstraints: *PageRegion Env9 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion Env9
*UIConstraints: *PageSize Env10 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize Env10
*UIConstraints: *PageRegion Env10 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion Env10
*UIConstraints: *PageSize EnvMonarch *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize EnvMonarch
*UIConstraints: *PageRegion EnvMonarch *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion EnvMonarch
*UIConstraints: *PageSize EnvDL *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize EnvDL
*UIConstraints: *PageRegion EnvDL *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion EnvDL
*UIConstraints: *PageSize EnvC5 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageSize EnvC5
*UIConstraints: *PageRegion EnvC5 *InputSlot UF1
*UIConstraints: *InputSlot UF1 *PageRegion EnvC5
*UIConstraints: *PageSize Executive *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion Executive
*UIConstraints: *PageSize A5 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize A5
*UIConstraints: *PageRegion A5 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion A5
*UIConstraints: *PageSize A6 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize A6
*UIConstraints: *PageRegion A6 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion A6
*UIConstraints: *PageSize B6 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize B6
*UIConstraints: *PageRegion B6 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion B6
*UIConstraints: *PageSize EnvPersonal *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize EnvPersonal
*UIConstraints: *PageRegion EnvPersonal *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion EnvPersonal
*UIConstraints: *PageSize Env9 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize Env9
*UIConstraints: *PageRegion Env9 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion Env9
*UIConstraints: *PageSize Env10 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize Env10
*UIConstraints: *PageRegion Env10 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion Env10
*UIConstraints: *PageSize EnvMonarch *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize EnvMonarch
*UIConstraints: *PageRegion EnvMonarch *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion EnvMonarch
*UIConstraints: *PageSize EnvDL *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize EnvDL
*UIConstraints: *PageRegion EnvDL *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion EnvDL
*UIConstraints: *PageSize EnvC5 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageSize EnvC5
*UIConstraints: *PageRegion EnvC5 *InputSlot PF9A
*UIConstraints: *InputSlot PF9A *PageRegion EnvC5
*UIConstraints: *PageSize Executive *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion Executive
*UIConstraints: *PageSize A5 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize A5
*UIConstraints: *PageRegion A5 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion A5
*UIConstraints: *PageSize A6 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize A6
*UIConstraints: *PageRegion A6 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion A6
*UIConstraints: *PageSize B6 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize B6
*UIConstraints: *PageRegion B6 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion B6
*UIConstraints: *PageSize EnvPersonal *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize EnvPersonal
*UIConstraints: *PageRegion EnvPersonal *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion EnvPersonal
*UIConstraints: *PageSize Env9 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize Env9
*UIConstraints: *PageRegion Env9 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion Env9
*UIConstraints: *PageSize Env10 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize Env10
*UIConstraints: *PageRegion Env10 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion Env10
*UIConstraints: *PageSize EnvMonarch *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize EnvMonarch
*UIConstraints: *PageRegion EnvMonarch *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion EnvMonarch
*UIConstraints: *PageSize EnvDL *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize EnvDL
*UIConstraints: *PageRegion EnvDL *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion EnvDL
*UIConstraints: *PageSize EnvC5 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageSize EnvC5
*UIConstraints: *PageRegion EnvC5 *InputSlot PF9B
*UIConstraints: *InputSlot PF9B *PageRegion EnvC5

*% Resolution 
*OpenUI *Resolution/Resolution: PickOne
*OrderDependency: 10 AnySetup *Resolution
*DefaultResolution: 300dpi
*Resolution 300dpi/300 dpi: "<< /HWResolution [300 300] >> setpagedevice"
*?Resolution: "save currentpagedevice /HWResolution get 0 get (      ) cvs print (dpi) = flush restore"
*CloseUI: *Resolution

*% Image Refinement 
*OpenUI *Smoothing/KIR: PickOne
*OrderDependency: 50 AnySetup *Smoothing
*DefaultSmoothing: Medium
*Smoothing None/Off: "0 statusdict /setdoret get exec"
*Smoothing Light/Light: "1 statusdict /setdoret get exec"
*Smoothing Medium/Medium: "2 statusdict /setdoret get exec"
*Smoothing Dark/Dark: "3 statusdict /setdoret get exec"
*?Smoothing: "
  save
  [(None)(Light)(Medium)(Dark)]
  statusdict /doret get exec {get} stopped
  {pop pop (Unknown)} if
  = flush restore"
*End
*CloseUI: *Smoothing

*% Halftone Information 
*DefaultHalftoneType: 1
*ScreenFreq: "18.75"
*ScreenAngle: "45.0"
*ResScreenFreq 300dpi: "18.75"
*ResScreenAngle 300dpi: "45.0"

*DefaultScreenProc: Ellipse
*ScreenProc Dot: "
  {abs exch abs 2 copy add 1 gt
  {1 sub dup mul exch 1 sub dup mul add 1 sub}
  {dup mul exch dup mul add 1 exch sub} ifelse}"
*End
*ScreenProc Line: "{pop}"
*ScreenProc Ellipse: "{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}"
*DefaultTransfer: Null
*Transfer Null: "{}"
*Transfer Null.Inverse: "{1 exch sub}"

*% Paper Handling 
*% Page Size Definitions
*OpenUI *PageSize: PickOne
*OrderDependency: 40 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize A3/A3: "<< /Policies << /PageSize 2 >> /PageSize [842 1191] /ImagingBBox null >> setpagedevice"
*PageSize A4/A4: "<< /Policies << /PageSize 2 >> /PageSize [595 842] /ImagingBBox null >> setpagedevice"
*PageSize A5/A5: "<< /Policies << /PageSize 2 >> /PageSize [420 595] /ImagingBBox null >> setpagedevice"
*PageSize A6/A6: "<< /Policies << /PageSize 2 >> /PageSize [297 420] /ImagingBBox null >> setpagedevice"
*PageSize B4/B4: "<< /Policies << /PageSize 2 >> /PageSize [729 1032] /ImagingBBox null >> setpagedevice"
*PageSize B5/B5 (JIS): "<< /Policies << /PageSize 2 >> /PageSize [516 729] /ImagingBBox null >> setpagedevice"
*PageSize B6/B6: "<< /Policies << /PageSize 2 >> /PageSize [363 516] /ImagingBBox null >> setpagedevice"
*PageSize Letter/Letter: "<< /Policies << /PageSize 2 >> /PageSize [612 792] /ImagingBBox null >> setpagedevice"
*PageSize Legal/Legal: "<< /Policies << /PageSize 2 >> /PageSize [612 1008] /ImagingBBox null >> setpagedevice"
*PageSize Executive/Executive: "<< /Policies << /PageSize 2 >> /PageSize [522 756] /ImagingBBox null >> setpagedevice"
*PageSize Tabloid/11x17 (Ledger): "<< /Policies << /PageSize 2 >> /PageSize [792 1224] /ImagingBBox null >> setpagedevice"
*PageSize EnvPersonal/Envelope #6: "<< /Policies << /PageSize 2 >> /PageSize [261 468] /ImagingBBox null >> setpagedevice"
*PageSize Env9/Envelope #9: "<< /Policies << /PageSize 2 >> /PageSize [279 639] /ImagingBBox null >> setpagedevice"
*PageSize Env10/Envelope #10: "<< /Policies << /PageSize 2 >> /PageSize [297 684] /ImagingBBox null >> setpagedevice"
*PageSize EnvMonarch/Envelope Monarch: "<< /Policies << /PageSize 2 >> /PageSize [279 540] /ImagingBBox null >> setpagedevice"
*PageSize EnvDL/Envelope DL: "<< /Policies << /PageSize 2 >> /PageSize [312 624] /ImagingBBox null >> setpagedevice"
*PageSize EnvC5/Envelope C5: "<< /Policies << /PageSize 2 >> /PageSize [459 649] /ImagingBBox null >> setpagedevice"
*?PageSize: "
  save
  currentpagedevice /PageSize get aload pop
  2 copy gt {exch} if
  (Unknown)
  17 dict
  dup [842 1191] (A3) put
  dup [595 842] (A4) put
  dup [420 595] (A5) put
  dup [297 420] (A6) put
  dup [729 1032] (B4) put
  dup [516 729] (B5) put
  dup [363 516] (B6) put
  dup [612 792] (Letter) put
  dup [612 1008] (Legal) put
  dup [522 756] (Executive) put
  dup [792 1224] (Tabloid) put
  dup [261 468] (EnvPersonal) put
  dup [279 639] (Env9) put
  dup [297 684] (Env10) put
  dup [279 540] (EnvMonarch) put
  dup [312 624] (EnvDL) put
  dup [459 649] (EnvC5) put
  {exch aload pop 4 index sub abs 5 le exch
    5 index sub abs 5 le and
    {exch pop exit}{pop} ifelse
  } bind forall
  = flush pop pop restore "
*End
*CloseUI: *PageSize

*% Page Region Definitions for Frame Buffer
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion A3/A3: "<< /Policies << /PageSize 7 >> /PageSize [842 1191] /ImagingBBox null >> setpagedevice"
*PageRegion A4/A4: "<< /Policies << /PageSize 7 >> /PageSize [595 842] /ImagingBBox null >> setpagedevice"
*PageRegion A5/A5: "<< /Policies << /PageSize 7 >> /PageSize [420 595] /ImagingBBox null >> setpagedevice"
*PageRegion A6/A6: "<< /Policies << /PageSize 7 >> /PageSize [297 420] /ImagingBBox null >> setpagedevice"
*PageRegion B4/B4: "<< /Policies << /PageSize 7 >> /PageSize [729 1032] /ImagingBBox null >> setpagedevice"
*PageRegion B5/B5 (JIS): "<< /Policies << /PageSize 7 >> /PageSize [516 729] /ImagingBBox null >> setpagedevice"
*PageRegion B6/B6: "<< /Policies << /PageSize 7 >> /PageSize [363 516] /ImagingBBox null >> setpagedevice"
*PageRegion Letter/Letter: "<< /Policies << /PageSize 7 >> /PageSize [612 792] /ImagingBBox null >> setpagedevice"
*PageRegion Legal/Legal: "<< /Policies << /PageSize 7 >> /PageSize [612 1008] /ImagingBBox null >> setpagedevice"
*PageRegion Executive/Executive: "<< /Policies << /PageSize 7 >> /PageSize [522 756] /ImagingBBox null >> setpagedevice"
*PageRegion Tabloid/11x17 (Ledger): "<< /Policies << /PageSize 7 >> /PageSize [792 1224] /ImagingBBox null >> setpagedevice"
*PageRegion EnvPersonal/Envelope #6: "<< /Policies << /PageSize 7 >> /PageSize [261 468] /ImagingBBox null >> setpagedevice"
*PageRegion Env9/Envelope #9: "<< /Policies << /PageSize 7 >> /PageSize [279 639] /ImagingBBox null >> setpagedevice"
*PageRegion Env10/Envelope #10: "<< /Policies << /PageSize 7 >> /PageSize [297 684] /ImagingBBox null >> setpagedevice"
*PageRegion EnvMonarch/Envelope Monarch: "<< /Policies << /PageSize 7 >> /PageSize [279 540] /ImagingBBox null >> setpagedevice"
*PageRegion EnvDL/Envelope DL: "<< /Policies << /PageSize 7 >> /PageSize [312 624] /ImagingBBox null >> setpagedevice"
*PageRegion EnvC5/Envelope C5: "<< /Policies << /PageSize 7 >> /PageSize [459 649] /ImagingBBox null >> setpagedevice"
*CloseUI: *PageRegion

*% Imageable Area Definitions
*DefaultImageableArea: A4
*ImageableArea A3/A3: "12 10 830 1181"
*ImageableArea A4/A4: "12 10 583 832"
*ImageableArea A5/A5: "12 12 409 585"
*ImageableArea A6/A6: "12 10 285 411"
*ImageableArea B4/B4: "12 10 716 1022"
*ImageableArea B5/B5 (JIS): "21 10 495 719"
*ImageableArea B6/B6: "12 10 352 506"
*ImageableArea Letter/Letter: "12 08 600 784"
*ImageableArea Legal/Legal: "12 08 600 1000"
*ImageableArea Executive/Executive: "12 08 510 748"
*ImageableArea Tabloid/11x17 (Ledger): "12 08 780 1216"
*ImageableArea EnvPersonal/Envelope #6: "12 08 237 452"
*ImageableArea Env9/Envelope #9: "12 08 255 623"
*ImageableArea Env10/Envelope #10: "12 08 273 668"
*ImageableArea EnvMonarch/Envelope Monarch: "12 08 255 524"
*ImageableArea EnvDL/Envelope DL: "12 10 288 604"
*ImageableArea EnvC5/Envelope C5: "12 10 435 629"
*?ImageableArea: "
  save
  /cvp {cvi (                   ) cvs
  print ( ) print} bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat ( )
  = flush restore"
*End

*% Physical Dimensions of Media
*DefaultPaperDimension: A4
*PaperDimension A3/A3: "842 1191"
*PaperDimension A4/A4: "595 842"
*PaperDimension A5/A5: "420 595"
*PaperDimension A6/A6: "297 420"
*PaperDimension B4/B4: "729 1032"
*PaperDimension B5/B5 (JIS): "516 729"
*PaperDimension B6/B6: "363 516"
*PaperDimension Letter/Letter: "612 792"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension Executive/Executive: "522 756"
*PaperDimension Tabloid/11x17 (Ledger): "792 1224"
*PaperDimension EnvPersonal/Envelope #6: "261 468"
*PaperDimension Env9/Envelope #9: "279 639"
*PaperDimension Env10/Envelope #10: "297 684"
*PaperDimension EnvMonarch/Envelope Monarch: "279 540"
*PaperDimension EnvDL/Envelope DL: "312 624"
*PaperDimension EnvC5/Envelope C5: "459 649"

*% Input Slot Definitions
*OpenUI *InputSlot: PickOne
*OrderDependency: 30 AnySetup *InputSlot
*DefaultInputSlot: Internal
*InputSlot Internal/Cassette 1 (Internal): "<</ManualFeed false>> setpagedevice statusdict begin 0 setpapertray end"
*InputSlot PF9A/Cassette 2: "<</ManualFeed false>> setpagedevice statusdict begin 1 setpapertray end"
*InputSlot PF9B/Cassette 3: "<</ManualFeed false>> setpagedevice statusdict begin 3 setpapertray end"
*InputSlot EF1/Envelope Feeder: "<</ManualFeed false>> setpagedevice statusdict begin 2 setpapertray end"
*InputSlot UF1/Universal Feeder: "<</ManualFeed false>> setpagedevice statusdict begin 2 setpapertray end"
*?InputSlot: ""
*CloseUI: *InputSlot

*RequiresPageRegion All: True
*% Manual Feed Definitions
*OpenUI *ManualFeed/Manual Feed: Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True/True: "<< /ManualFeed true >> setpagedevice"
*ManualFeed False/False: "<< /ManualFeed false >> setpagedevice"
*?ManualFeed: "
   save
   currentpagedevice /ManualFeed get
   {(True)}{(False)} ifelse
  = flush restore"
*End
*CloseUI: *ManualFeed

*% Output Bin Definitions
*OpenUI *OutputBin/Output Bin: PickOne
*OrderDependency: 51 AnySetup *OutputBin
*DefaultOutputBin: FDTop
*OutputBin FDTop/Top Tray (Face-Down): "0 statusdict /setoutputtray get exec"
*OutputBin FURear/Rear Tray (Face-Up): "1 statusdict /setoutputtray get exec"
*?OutputBin: ""
*CloseUI: *OutputBin

*% Page Stack Order
*PageStackOrder FDTop: Normal
*PageStackOrder FURear: Normal

*% Tray Switch Definitions
*OpenUI *TraySwitch/Auto Tray Switch: PickOne
*OrderDependency: 25 AnySetup *TraySwitch
*DefaultTraySwitch: PrnDef
*TraySwitch PrnDef/Printer Default: ""
*TraySwitch True/On: "<< /TraySwitch true >> setpagedevice"
*TraySwitch False/Off: "<< /TraySwitch false >> setpagedevice"
*?TraySwitch: "
  save
  currentpagedevice /TraySwitch get
  { (True) }{ (False) } ifelse
  = flush restore"
*End
*CloseUI: *TraySwitch

*% PPD Version Info 
*OpenUI *KMVersion/PPD Version: PickOne
*OrderDependency: 25 AnySetup *KMVersion
*DefaultKMVersion: Default
*KMVersion Default/8.2.0111 [01-11-2005]: ""
*CloseUI: *KMVersion

*% Font Information
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM
*?FontQuery: "
  save
  /str 100 string dup 0 (fonts/) putinterval def
  {count 1 gt
    { exch dup str 6 94 getinterval cvs
      (/) print print (:) print
      FontDirectory exch known
      {(Yes)}{(No)} ifelse =
    }{exit} ifelse
  } bind loop (*)
  = flush restore"
*End
*?FontList: "save FontDirectory { pop == } bind forall flush (*) = flush restore"
*% Printer Messages
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "warming up"/warming up
*Status: "idle"/idle
*Status: "busy"/busy
*Status: "waiting"/waiting
*Status: "printing"/printing
*Status: "initializing"/initializing
*Status: "printing test page"/printing test page
*% Printer Error (format: %%[ PrinterError: <one of these> ]%% )
*PrinterError: "paper entry misfeed"
*PrinterError: "cover open"
*PrinterError: "no paper tray"
*PrinterError: "out of paper"
*PrinterError: "toner low (halt)"
*PrinterError: "warming up"
*PrinterError: "other reason"
*PrinterError: "video interface mode"
*PrinterError: "offline"
*PrinterError: "toner low (warning)"

*% Input Sources (format: %%[ status: <stat>;source:<one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "Option"

*%  End of PPD file for Kyocera FS-6500+ (English)
