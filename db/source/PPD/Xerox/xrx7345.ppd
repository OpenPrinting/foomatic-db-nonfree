*PPD-Adobe: "4.3"

*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1996 Adobe Systems Incorporated.
*% All Rights Reserved.
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement

*FileVersion: "1.0"
*FormatVersion: "4.3"
*LanguageEncoding: UTF8
*LanguageVersion: English

*Manufacturer: "Xerox"
*Product: "(Xerox WorkCentre 7328/7335/7345)"
*PCFileName: "XRWP7328.PPD"
*PSVersion: "(3016.103) 6"
*ShortNickName: "Xerox WorkCentre 7328/7335/7345"
*ModelName: "Xerox WorkCentre 7328/7335/7345"
*NickName: "Xerox WorkCentre 7328/7335/7345"


*OpenGroup: InstallableOptions/Options Installed

*OpenUI *XRPaperTrays/Paper Trays: PickOne
*DefaultXRPaperTrays: ThreeTrays
*XRPaperTrays ThreeTrays/3 Tray Module: ""
*XRPaperTrays ThreeTraysHiCap/High Capacity Tandem Tray: ""
*CloseUI: *XRPaperTrays

*OpenUI *XRFinisher/Finisher/Output Tray: PickOne
*DefaultXRFinisher: BClass
*XRFinisher None/Offset Catch Tray: ""
*XRFinisher BClass/Office Finisher: ""
*XRFinisher CClass/Advanced Office Finisher: ""
*XRFinisher CClassBooklet/Professional Finisher: ""
*CloseUI: *XRFinisher

*OpenUI *XRHolePunchUnit/Hole Punch Unit: PickOne
*DefaultXRHolePunchUnit: False
*XRHolePunchUnit False/Not Installed: ""
*XRHolePunchUnit HolePunch24/2 & 4 Hole Punch Unit: ""
*XRHolePunchUnit HolePunch3/3 Hole Punch Unit: ""
*XRHolePunchUnit HolePunch4/4 Hole Punch Unit: ""
*CloseUI: *XRHolePunchUnit

*OpenUI *XRFax/LAN Fax: PickOne
*DefaultXRFax: False
*XRFax True/Installed: ""
*XRFax False/Not Installed: ""
*CloseUI: *XRFax

*CloseGroup: InstallableOptions

*% =============== Device Capabilities ===============
*LanguageLevel: "3"
*Protocols: BCP PJL TBCP
*1284Modes Parallel: Compat Nibble ECP
*1284DeviceID: "MANUFACTURER:XEROX;COMMAND SET:;MODEL:WorkCentre 7228;CLASS:PRINTER;COMPATIBLE ID:;DESCRIPTION:XEROX WorkCentre 7228;"

*JCLBegin:"<1B>%-12345X@PJL JOB<0A>"

*JCLOpenUI *JCLBanner/Banner Sheet: Boolean
*OrderDependency: 10.0 JCLSetup *JCLBanner
*DefaultJCLBanner: True
*JCLBanner False/Disabled: "@PJL SET JOBATTR=<22>@BANR=OFF<22><0A>"
*JCLBanner True/Enabled: "@PJL SET JOBATTR=<22>@BANR=START<22><0A>"
*JCLCloseUI: *JCLBanner

*JCLToPSInterpreter:"@PJL ENTER LANGUAGE = POSTSCRIPT<0A>"
*JCLEnd:"<1B>%-12345X@PJL EOJ<0A><1B>%-12345X<0A>"

*FreeVM: "23247104"
*VMOption 768Meg/768MB: "23247104"
*VMOption 1024Meg/1024MB: "23247104"

*ColorDevice: True
*DefaultColorSpace: CMYK
*VariablePaperSize: True
*LandscapeOrientation: Plus90
*TTRasterizer: Type42
*FileSystem: True

*Throughput: "26"
*Password: "()"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "300"
*PrintPSErrors: True

*% OutputMode Information ===================
*DefaultResolution: 600dpi

*AccurateScreensSupport: True

*% UI Constraints

*%      Constraints Based on Installable Options

*UIConstraints : *XRFinisher None *OutputBin Top
*UIConstraints : *XRFinisher None *OutputBin Stacker
*UIConstraints : *XRFinisher None *OutputBin Booklet
*UIConstraints : *XRFinisher BClass *OutputBin Top
*UIConstraints : *XRFinisher BClass *OutputBin Booklet
*UIConstraints : *XRFinisher CClass *OutputBin Middle
*UIConstraints : *XRFinisher CClass *OutputBin Booklet
*UIConstraints : *XRFinisher CClassBooklet *OutputBin Middle

*% AUTOGENERATED CONSTRAINTS BEGIN
*UIConstraints :  *OutputBin Top *XRFinisher None 
*UIConstraints :  *OutputBin Stacker *XRFinisher None 
*UIConstraints :  *OutputBin Booklet *XRFinisher None 
*UIConstraints :  *OutputBin Top *XRFinisher BClass 
*UIConstraints :  *OutputBin Booklet *XRFinisher BClass 
*UIConstraints :  *OutputBin Middle *XRFinisher CClass 
*UIConstraints :  *OutputBin Booklet *XRFinisher CClass 
*UIConstraints :  *OutputBin Middle *XRFinisher CClassBooklet 
*% AUTOGENERATED CONSTRAINTS END

*%

*% Paper Handling ===================
*OpenUI *PageSize: PickOne
*OrderDependency: 2.0 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize A4/A4 (210 x 297 mm): "
    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Letter/Letter (8.5 x 11"): "
    6 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Legal/Legal (8.5 x 14"): "
    6 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageSize Tabloid/Tabloid (11 x 17"): "
    6 dict dup /PageSize [792 1224] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageSize A3/A3 (297 x 420 mm): "
    6 dict dup /PageSize [842 1191] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageSize 100x148Postcard/Postcard (100 x 148 mm): "
    6 dict dup /PageSize [283 420] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 4x6/Postcard (4 x 6"): "
    6 dict dup /PageSize [288 432] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize A6/A6 (105 x 148 mm): "
    6 dict dup /PageSize [297 420] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 5x7/5 x 7": "
    6 dict dup /PageSize [360 504] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize JISB6/JIS B6 (128 x 182 mm): "
    6 dict dup /PageSize [363 516] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Statement/Statement (5.5 x 8.5"): "
    6 dict dup /PageSize [396 612] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 148x200Postcard/Postcard (148 x 200 mm): "
    6 dict dup /PageSize [420 567] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize A5/A5 (148 x 210 mm): "
    6 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize JISB5/JIS B5 (182 x 257 mm): "
    6 dict dup /PageSize [516 729] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Executive/Executive (7.25 x 10.5"): "
    6 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 16K/16K (194 x 267 mm): "
    6 dict dup /PageSize [550 757] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 8x10/8 x 10": "
    6 dict dup /PageSize [576 720] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize SpanishFolio/215 x 315 mm: "
    6 dict dup /PageSize [609 892] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FanFoldGermanLegal/8.5 x 13": "
    6 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageSize A4Cover/Oversized A4 (223 x 297 mm): "
    6 dict dup /PageSize [632 842] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 9x11/9 x 11": "
    6 dict dup /PageSize [648 792] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize JISB4/JIS B4 (257 x 364 mm): "
    6 dict dup /PageSize [729 1032] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageSize 815/8K (267 x 388 mm): "
    6 dict dup /PageSize [757 1100] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageSize XR11x15/11 x 15": "
    6 dict dup /PageSize [792 1080] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize TabloidExtra/Oversized Tabloid (12 x 18"): "
    6 dict dup /PageSize [864 1296] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize SRA3/SRA3 (320 x 450 mm): "
    6 dict dup /PageSize [907 1274] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvChou3/Envelope (120 x 235 mm): "
    6 dict dup /PageSize [340 666] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvDL/Envelope DL (110 x 220 mm): "
    6 dict dup /PageSize [312 624] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvMonarch/Envelope Monarch (3.875 x 7.5"): "
    6 dict dup /PageSize [279 540] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Env10/Envelope No. 10 (4.125 x 9.5"): "
    6 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 2.0 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion A4/A4 (210 x 297 mm): "
    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Letter/Letter (8.5 x 11"): "
    6 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Legal/Legal (8.5 x 14"): "
    6 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageRegion Tabloid/Tabloid (11 x 17"): "
    6 dict dup /PageSize [792 1224] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageRegion A3/A3 (297 x 420 mm): "
    6 dict dup /PageSize [842 1191] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageRegion 100x148Postcard/Postcard (100 x 148 mm): "
    6 dict dup /PageSize [283 420] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 4x6/Postcard (4 x 6"): "
    6 dict dup /PageSize [288 432] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion A6/A6 (105 x 148 mm): "
    6 dict dup /PageSize [297 420] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 5x7/5 x 7": "
    6 dict dup /PageSize [360 504] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion JISB6/JIS B6 (128 x 182 mm): "
    6 dict dup /PageSize [363 516] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Statement/Statement (5.5 x 8.5"): "
    6 dict dup /PageSize [396 612] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 148x200Postcard/Postcard (148 x 200 mm): "
    6 dict dup /PageSize [420 567] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion A5/A5 (148 x 210 mm): "
    6 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion JISB5/JIS B5 (182 x 257 mm): "
    6 dict dup /PageSize [516 729] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Executive/Executive (7.25 x 10.5"): "
    6 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 16K/16K (194 x 267 mm): "
    6 dict dup /PageSize [550 757] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 8x10/8 x 10": "
    6 dict dup /PageSize [576 720] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion SpanishFolio/215 x 315 mm: "
    6 dict dup /PageSize [609 892] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FanFoldGermanLegal/8.5 x 13": "
    6 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageRegion A4Cover/Oversized A4 (223 x 297 mm): "
    6 dict dup /PageSize [632 842] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 9x11/9 x 11": "
    6 dict dup /PageSize [648 792] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion JISB4/JIS B4 (257 x 364 mm): "
    6 dict dup /PageSize [729 1032] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageRegion 815/8K (267 x 388 mm): "
    6 dict dup /PageSize [757 1100] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
    userdict /XRXShortEdgeFinishing true put
"
*End
*PageRegion XR11x15/11 x 15": "
    6 dict dup /PageSize [792 1080] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion TabloidExtra/Oversized Tabloid (12 x 18"): "
    6 dict dup /PageSize [864 1296] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion SRA3/SRA3 (320 x 450 mm): "
    6 dict dup /PageSize [907 1274] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvChou3/Envelope (120 x 235 mm): "
    6 dict dup /PageSize [340 666] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvDL/Envelope DL (110 x 220 mm): "
    6 dict dup /PageSize [312 624] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvMonarch/Envelope Monarch (3.875 x 7.5"): "
    6 dict dup /PageSize [279 540] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Env10/Envelope No. 10 (4.125 x 9.5"): "
    6 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /LeadingEdge null put dup /MediaPosition null put
    dup /MediaPosition null put currentpagedevice
    /Policies 2 copy known
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*CloseUI: *PageRegion

*DefaultImageableArea: Letter
*ImageableArea A4/A4 (210 x 297 mm): "11.62 11.62 583.65 830.27 "
*ImageableArea Letter/Letter (8.5 x 11"): "11.62 11.62 600.38 780.38 "
*ImageableArea Legal/Legal (8.5 x 14"): "11.62 11.62 600.38 996.38 "
*ImageableArea Tabloid/Tabloid (11 x 17"): "11.62 11.62 780.38 1212.38 "
*ImageableArea A3/A3 (297 x 420 mm): "11.62 11.62 830.27 1178.93 "
*ImageableArea 100x148Postcard/Postcard (100 x 148 mm): "11.62 11.62 271.84 407.91 "
*ImageableArea 4x6/Postcard (4 x 6"): "11.62 11.62 276.38 420.38 "
*ImageableArea A6/A6 (105 x 148 mm): "11.62 11.62 286.02 407.91 "
*ImageableArea 5x7/5 x 7": "11.62 11.62 348.38 492.38 "
*ImageableArea JISB6/JIS B6 (128 x 182 mm): "11.62 11.62 351.21 504.28 "
*ImageableArea Statement/Statement (5.5 x 8.5"): "11.62 11.62 384.38 600.38 "
*ImageableArea 148x200Postcard/Postcard (148 x 200 mm): "11.62 11.62 407.91 555.31 "
*ImageableArea A5/A5 (148 x 210 mm): "11.62 11.62 407.91 583.65 "
*ImageableArea JISB5/JIS B5 (182 x 257 mm): "11.62 11.62 504.28 716.88 "
*ImageableArea Executive/Executive (7.25 x 10.5"): "11.62 11.62 510.52 744.38 "
*ImageableArea 16K/16K (194 x 267 mm): "11.62 11.62 538.30 745.23 "
*ImageableArea 8x10/8 x 10": "11.62 11.62 564.38 708.38 "
*ImageableArea SpanishFolio/215 x 315 mm: "11.62 11.62 597.83 881.29 "
*ImageableArea FanFoldGermanLegal/8.5 x 13": "11.62 11.62 600.38 924.38 "
*ImageableArea A4Cover/A4 Cover (223 x 297 mm): "11.62 11.62 620.50 830.27 "
*ImageableArea 9x11/9 x 11": "11.62 11.62 636.38 780.38 "
*ImageableArea JISB4/JIS B4 (257 x 364 mm): "11.62 11.62 716.88 1020.19 "
*ImageableArea 815/8K (267 x 388 mm): "11.62 11.62 745.23 1088.22 "
*ImageableArea XR11x15/11 x 15": "11.62 11.62 780.38 1068.38 "
*ImageableArea TabloidExtra/Oversized Tabloid (12 x 18"): "11.62 11.62 852.38 1284.38 "
*ImageableArea SRA3/SRA3 (320 x 450 mm): "24.09 11.62 882.99 1262.83 "
*ImageableArea EnvChou3/Envelope (120 x 235 mm): "11.62 11.62 328.54 654.52 "
*ImageableArea EnvDL/Envelope DL (110 x 220 mm): "11.34 11.34 300.66 612.66"
*ImageableArea EnvMonarch/Envelope Monarch (3.875 x 7.5"): "11.34 11.34 267.66 528.66"
*ImageableArea Env10/Envelope No. 10 (4.125 x 9.5"): "11.34 11.34 285.66 672.66"

*DefaultPaperDimension: Letter
*PaperDimension A3/A3 (297 x 420 mm): "842 1191"
*PaperDimension JISB4/JIS B4 (257 x 364 mm): "729 1032"
*PaperDimension A4/A4 (210 x 297 mm): "595 842"
*PaperDimension JISB5/JIS B5 (182 x 257 mm): "516 729"
*PaperDimension A5/A5 (148 x 210 mm): "420 595"
*PaperDimension JISB6/JIS B6 (128 x 182 mm): "363 516"
*PaperDimension A6/A6 (105 x 148 mm): "297 420"
*PaperDimension 100x148Postcard/Postcard (100 x 148 mm): "283 420"
*PaperDimension 148x200Postcard/Postcard (148 x 200 mm): "420 567"
*PaperDimension 4x6/Postcard (4 x 6"): "288 432"
*PaperDimension EnvChou3/Envelope (120 x 235 mm): "340 666"
*PaperDimension SRA3/SRA3 (320 x 450 mm): "907 1274"
*PaperDimension 5x7/5 x 7": "360 504"
*PaperDimension Statement/Statement (5.5 x 8.5"): "396 612"
*PaperDimension Executive/Executive (7.25 x 10.5"): "522 756"
*PaperDimension 8x10/8 x 10": "576 720"
*PaperDimension SpanishFolio/215 x 315 mm: "609 892"
*PaperDimension Letter/Letter (8.5 x 11"): "612 792"
*PaperDimension Legal/Legal (8.5 x 14"): "612 1008"
*PaperDimension FanFoldGermanLegal/8.5 x 13": "612 936"
*PaperDimension XR11x15/11 x 15": "792 1080"
*PaperDimension Tabloid/Tabloid (11 x 17"): "792 1224"
*PaperDimension TabloidExtra/Oversized Tabloid (12 x 18"): "864 1296"
*PaperDimension 815/8K (267 x 388 mm): "757 1100"
*PaperDimension 16K/16K (194 x 267 mm): "550 757"
*PaperDimension A4Cover/A4 Cover (223 x 297 mm): "632 842"
*PaperDimension 9x11/9 x 11": "648 792"
*PaperDimension EnvMonarch/Envelope Monarch (3.875 x 7.5"): "279 540"
*PaperDimension Env10/Envelope No. 10 (4.125 x 9.5"): "297 684"
*PaperDimension EnvDL/Envelope DL (110 x 220 mm): "312 624"

*OpenUI *Collate/Collated: Boolean
*OrderDependency: 10.0 AnySetup *Collate
*DefaultCollate: False
*Collate False/Off: "<< /Collate false >> setpagedevice"
*Collate True/On: "<< /Collate true >> setpagedevice"
*CloseUI: *Collate

*OpenUI *InputSlot/Paper Tray: PickOne
*OrderDependency: 1.0 AnySetup *InputSlot
*DefaultInputSlot: Auto
*InputSlot Auto/Automatically Select: ""
*InputSlot Tray1/Tray 1: "
	3 dict begin
	/MediaPosition 0 def
	currentpagedevice /InputAttributes get dup 0 known
	{0 get dup null eq
		{ pop }
		{ /MediaClass get /MediaClass exch def } ifelse
	}
	{ pop } ifelse	/DeferredMediaSelection true def
	/ManualFeed false def
	currentdict end setpagedevice
"
*End
*InputSlot Tray2/Tray 2: "
	3 dict begin
	/MediaPosition 1 def
	currentpagedevice /InputAttributes get dup 1 known
	{1 get dup null eq
		{ pop }
		{ /MediaClass get /MediaClass exch def } ifelse
	}
	{ pop } ifelse	/DeferredMediaSelection true def
	/ManualFeed false def
	currentdict end setpagedevice
"
*End
*InputSlot Tray3/Tray 3: "
	3 dict begin
	/MediaPosition 2 def
	currentpagedevice /InputAttributes get dup 2 known
	{2 get dup null eq
		{ pop }
		{ /MediaClass get /MediaClass exch def } ifelse
	}
	{ pop } ifelse	/DeferredMediaSelection true def
	/ManualFeed false def
	currentdict end setpagedevice
"
*End
*InputSlot Tray4/Tray 4: "
	3 dict begin
	/MediaPosition 3 def
	currentpagedevice /InputAttributes get dup 3 known
	{3 get dup null eq
		{ pop }
		{ /MediaClass get /MediaClass exch def } ifelse
	}
	{ pop } ifelse	/DeferredMediaSelection true def
	/ManualFeed false def
	currentdict end setpagedevice
"
*End
*InputSlot Bypass/Tray 5 (Bypass): "
    << /ManualFeed true /MediaClass null >> setpagedevice
"
*End
*CloseUI: *InputSlot

*OpenUI *OutputBin/Output Destination: PickOne
*OrderDependency: 20.0 AnySetup *OutputBin
*DefaultOutputBin: Auto
*OutputBin Auto/Automatically Select: ""
*OutputBin Middle/Center Tray: "
    currentpagedevice /OutputAttributes get dup 0 known
      {0 get dup null eq
       { pop }
       { dup length dict copy
         setpagedevice
       } ifelse }
      {pop}
      ifelse
    "
*End
*OutputBin Top/Top Tray: "
    currentpagedevice /OutputAttributes get dup 0 known
      {0 get dup null eq
       { pop }
       { dup length dict copy
         setpagedevice
       } ifelse }
      {pop}
      ifelse
"
*End
*OutputBin Stacker/Stacker Tray: "
currentpagedevice /OutputAttributes get dup 30 known
  {30 get dup null eq
   { pop }
   { dup length dict copy
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*OutputBin Booklet/Booklet Maker Bin: "
currentpagedevice /OutputAttributes get dup 50 known
  {50 get dup null eq
   { pop }
   { dup length dict copy
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*CloseUI: *OutputBin

*OpenUI *StapleLocation/Stapling: PickOne
*OrderDependency: 50.0 AnySetup *StapleLocation
*DefaultStapleLocation: None
*StapleLocation None/No Staple: "
    << /Staple 0 >> setpagedevice
"
*End
*StapleLocation SinglePortrait/1 Staple (Portrait): "
    << /Collate true /Staple 3 /OutputType (STACKER TRAY) /StapleDetails << /Type 7 /Location 0 >> >> setpagedevice
"
*End
*StapleLocation SingleLandscape/1 Staple (Landscape): "
    << /Collate true /Staple 3 /OutputType (STACKER TRAY) /StapleDetails << /Type 7 /Location 1 >> >> setpagedevice
"
*End
*StapleLocation DualPortrait/2 Staples (Portrait): "
    userdict /XRXShortEdgeFinishing known
    { << /Collate true /Staple 3 /OutputType (STACKER TRAY) /LeadingEdge 0 /StapleDetails << /Type 7 /Location 4 >> >> setpagedevice }
    { << /Collate true /Staple 3 /OutputType (STACKER TRAY) /LeadingEdge 1 /StapleDetails << /Type 7 /Location 6 >> >> setpagedevice } ifelse
"
*End
*StapleLocation DualLandscape/2 Staples (Landscape): "
    userdict /XRXShortEdgeFinishing known
    { << /Collate true /Staple 3 /OutputType (STACKER TRAY) /LeadingEdge 0 /StapleDetails << /Type 7 /Location 5 >> >> setpagedevice }
    { << /Collate true /Staple 3 /OutputType (STACKER TRAY) /LeadingEdge 1 /StapleDetails << /Type 7 /Location 6 >> >> setpagedevice } ifelse
"
*End
*CloseUI: *StapleLocation

*OpenUI *XRPunch/Hole Punch: PickOne
*OrderDependency: 50.0 AnySetup *XRPunch
*DefaultXRPunch: None
*XRPunch None/None: "
    << /Punch 0 >> setpagedevice
"
*End
*XRPunch 2HolePunch/2 Hole Punch (Portrait): "
    userdict /XRXShortEdgeFinishing known
    { << /Punch 3 /LeadingEdge 0 /PunchDetails << /Type 5 /Position 0 /NumHoles 2 >> >> setpagedevice }
    { << /Punch 3 /LeadingEdge 1 /PunchDetails << /Type 5 /Position 2 /NumHoles 2 >> >> setpagedevice } ifelse
"
*End
*XRPunch 2HolePunchLandscape/2 Hole Punch (Landscape): "
    userdict /XRXShortEdgeFinishing known
    { << /Punch 3 /LeadingEdge 0 /PunchDetails << /Type 5 /Position 1 /NumHoles 2 >> >> setpagedevice }
    { << /Punch 3 /LeadingEdge 1 /PunchDetails << /Type 5 /Position 2 /NumHoles 2 >> >> setpagedevice } ifelse
"
*End
*XRPunch 3HolePunch/3 Hole Punch (Portrait): "
    userdict /XRXShortEdgeFinishing known
    { << /Punch 3 /LeadingEdge 0 /PunchDetails << /Type 5 /Position 0 /NumHoles 3 >> >> setpagedevice }
    { << /Punch 3 /LeadingEdge 1 /PunchDetails << /Type 5 /Position 2 /NumHoles 3 >> >> setpagedevice } ifelse
"
*End
*XRPunch 3HolePunchLandscape/3 Hole Punch (Landscape): "
    userdict /XRXShortEdgeFinishing known
    { << /Punch 3 /LeadingEdge 0 /PunchDetails << /Type 5 /Position 1 /NumHoles 3 >> >> setpagedevice }
    { << /Punch 3 /LeadingEdge 1 /PunchDetails << /Type 5 /Position 2 /NumHoles 3 >> >> setpagedevice } ifelse
"
*End
*XRPunch 4HolePunch/4 Hole Punch (Portrait): "
    userdict /XRXShortEdgeFinishing known
    { << /Punch 3 /LeadingEdge 0 /PunchDetails << /Type 5 /Position 0 /NumHoles 4 >> >> setpagedevice }
    { << /Punch 3 /LeadingEdge 1 /PunchDetails << /Type 5 /Position 2 /NumHoles 4 >> >> setpagedevice } ifelse
"
*End
*XRPunch 4HolePunchLandscape/4 Hole Punch (Landscape): "
    userdict /XRXShortEdgeFinishing known
    { << /Punch 3 /LeadingEdge 0 /PunchDetails << /Type 5 /Position 1 /NumHoles 4 >> >> setpagedevice }
    { << /Punch 3 /LeadingEdge 1 /PunchDetails << /Type 5 /Position 2 /NumHoles 4 >> >> setpagedevice } ifelse
"
*End
*CloseUI: *XRPunch

*OpenUI *XRFold/Fold: PickOne
*OrderDependency: 50.0 AnySetup *XRFold
*DefaultXRFold: None
*XRFold None/None: "<< /Fold 0 >> setpagedevice"
*XRFold BiFold/Booklet Fold: "<< /Collate true /OutputType (BOOKLET TRAY) /LeadingEdge 0 /Booklet true /BookletDetails << /Type 3 /StapleType 0 /PrintInside true /PageSet true >> >> setpagedevice"
*XRFold BiFoldStaple/Booklet Fold and Staple: "<< /Collate true /OutputType (BOOKLET TRAY) /LeadingEdge 0 /Booklet true /BookletDetails << /Type 3 /StapleType 1 /PrintInside true /PageSet true >> >> setpagedevice"
*CloseUI: *XRFold

*OpenUI *Duplex/2 Sided Print: PickOne
*OrderDependency: 100.0 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/1-Sided Print: "1 dict dup/Duplex false put setpagedevice"
*Duplex DuplexNoTumble/2-Sided Print: "2 dict dup/Duplex true put dup/Tumble false put setpagedevice"
*Duplex DuplexTumble/2-Sided Print, Flip on Short Edge: "2 dict dup/Duplex true put dup/Tumble true put setpagedevice"
*CloseUI: *Duplex

*OpenUI *XRFeedEdge/Tray 5 (Bypass) Feed Edge: PickOne
*OrderDependency: 110.0 AnySetup *XRFeedEdge
*DefaultXRFeedEdge: LongEdge
*XRFeedEdge LongEdge/Long Edge Feed (Normal): "
currentpagedevice /ManualFeed 2 copy known
{ get { 1
  currentpagedevice /PageSize get
  [
    [ 340 666 2 ] % EnvChou3
  ]
  {
    aload pop 3 1 roll 4 -1 roll dup 5 1 roll
    aload pop
    3 -1 roll eq 3 1 roll eq and {
      3 1 roll pop exit
    }{
      pop
    } ifelse
  } forall
  pop
  1 dict begin /LeadingEdge exch def currentdict end setpagedevice
  }{} ifelse
}{pop pop} ifelse
"
*End
*XRFeedEdge ShortEdge/Short Edge Feed: "
currentpagedevice /ManualFeed 2 copy known
{ get { 0
  currentpagedevice /PageSize get
  [
    [ 340 666 2 ] % EnvChou3
  ]
  {
    aload pop 3 1 roll 4 -1 roll dup 5 1 roll
    aload pop
    3 -1 roll eq 3 1 roll eq and {
      3 1 roll pop exit
    }{
      pop
    } ifelse
  } forall
  pop
  1 dict begin /LeadingEdge exch def currentdict end setpagedevice
  }{} ifelse
}{pop pop} ifelse
"
*End
*CloseUI: *XRFeedEdge

*OpenUI *XRFrontCoverSheet/Front Cover: PickOne
*OrderDependency: 185.0 AnySetup *XRFrontCoverSheet
*DefaultXRFrontCoverSheet: None
*XRFrontCoverSheet None/No Front Cover: "
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /CoverSheet 0 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRFrontCoverSheet Tray1/Tray 1: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /CoverSheet 1 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRFrontCoverSheet Tray2/Tray 2: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /CoverSheet 2 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRFrontCoverSheet Tray3/Tray 3: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /CoverSheet 3 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRFrontCoverSheet Tray4/Tray 4: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /CoverSheet 4 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End*XRFrontCoverSheet Bypass/Tray 5 (Bypass): "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /CoverSheet 5 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*CloseUI: *XRFrontCoverSheet

*OpenUI *XRBackCoverSheet/Back Cover: PickOne
*OrderDependency: 185.0 AnySetup *XRBackCoverSheet
*DefaultXRBackCoverSheet: None
*XRBackCoverSheet None/No Back Cover: "
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /BackCoverSheet 0 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRBackCoverSheet Tray1/Tray 1: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /BackCoverSheet 1 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRBackCoverSheet Tray2/Tray 2: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /BackCoverSheet 2 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRBackCoverSheet Tray3/Tray 3: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /BackCoverSheet 3 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*XRBackCoverSheet Tray4/Tray 4: "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /BackCoverSheet 4 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End*XRBackCoverSheet Bypass/Tray 5 (Bypass): "
    << /Collate true >> setpagedevice
    /Custom /ProcSet findresource /setcoversheet 2 copy known {
        get 1 dict dup /BackCoverSheet 5 put exch exec pop
    }{
        pop pop
    } ifelse
"
*End
*CloseUI: *XRBackCoverSheet

*OpenUI *XRSlipSheetPrint/Transparency Separators: PickOne
*OrderDependency: 119.0 AnySetup *XRSlipSheetPrint
*DefaultXRSlipSheetPrint: None
*XRSlipSheetPrint None/No Separators: "
    1 dict dup
        /SlipSheet 0 put
    setpagedevice
"
*End
*XRSlipSheetPrint Blank/Blank Separators: "
  /Custom /ProcSet resourcestatus {
    pop pop /Custom/ProcSet findresource dup /setjobinstruction known {
      begin
      1 dict dup/Interleaf 0 put setjobinstruction
      end
    }{pop} ifelse
  } if
"
*End
*XRSlipSheetPrint Printed/Printed Separators: "
  /Custom /ProcSet resourcestatus {
    pop pop /Custom/ProcSet findresource dup /setjobinstruction known {
      begin
      1 dict dup/Interleaf 1 put setjobinstruction
      end
    }{pop} ifelse
  } if
"
*End
*CloseUI: *XRSlipSheetPrint

*OpenUI *XRSlipSheetSource/Transparency Separators Source: PickOne
*OrderDependency: 120.0 AnySetup *XRSlipSheetSource
*DefaultXRSlipSheetSource: None
*XRSlipSheetSource None/None: ""
*XRSlipSheetSource Tray1/Tray 1: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 0 put put setpagedevice
"
*End
*XRSlipSheetSource Tray2/Tray 2: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 1 put put setpagedevice
"
*End
*XRSlipSheetSource Tray3/Tray 3: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 2 put put setpagedevice
"
*End
*XRSlipSheetSource Tray4/Tray 4: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 3 put put setpagedevice
"
*End
*XRSlipSheetSource Tray5/Tray 5 (Bypass): "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 100 put put setpagedevice
"
*End
*CloseUI: *XRSlipSheetSource

*OpenUI *MediaType/Paper Type: PickOne
*OrderDependency: 90.0 AnySetup *MediaType
*DefaultMediaType: SystemDefault
*MediaType SystemDefault/Printer Default Type: ""
*MediaType Standard/Plain: "1 dict dup/MediaClass(stationary)put setpagedevice"
*MediaType Standard2/Plain Reloaded: "1 dict dup/MediaClass(used)put setpagedevice"
*MediaType Recycled/Recycled: "1 dict dup/MediaClass(recycled)put setpagedevice"
*MediaType Bond/Bond: "1 dict dup/MediaClass(fine)put setpagedevice"
*MediaType Custom1/Custom Type 1: "1 dict dup/MediaClass(user1)put setpagedevice"
*MediaType Custom2/Custom Type 2: "1 dict dup/MediaClass(user2)put setpagedevice"
*MediaType Custom3/Custom Type 3: "1 dict dup/MediaClass(user3)put setpagedevice"
*MediaType Custom4/Custom Type 4: "1 dict dup/MediaClass(user4)put setpagedevice"
*MediaType Custom5/Custom Type 5: "1 dict dup/MediaClass(user5)put setpagedevice"
*MediaType Light/Lightweight: "1 dict dup/MediaClass(thin)put setpagedevice"
*MediaType CardStock/Heavyweight: "1 dict dup/MediaClass(thick1)put setpagedevice"
*MediaType CardStock2/Heavyweight Reloaded: "<< /MediaClass(thick1 side2) /ManualFeed true >> setpagedevice"
*MediaType ExtraHeavyweight/Extra Heavyweight: "1 dict dup/MediaClass(thick2)put setpagedevice"
*MediaType ExtraHeavyweight2/Extra Heavyweight Reloaded: "<< /MediaClass(thick2 side2) /ManualFeed true >> setpagedevice"
*MediaType Transparency/Transparency: "1 dict dup/MediaClass(transparency)put setpagedevice"
*MediaType HeavyGlossy/Heavyweight Gloss: "1 dict dup/MediaClass(coating1)put setpagedevice"
*MediaType HeavyGlossy2/Heavyweight Gloss Reloaded: "<< /MediaClass(coating1 side2) /ManualFeed true >> setpagedevice"
*MediaType Labels/Labels: "1 dict dup/MediaClass(label)put setpagedevice"
*MediaType LightGlossy/Gloss: "1 dict dup/MediaClass(coating1 finisher)put setpagedevice"
*MediaType ExtraHeavyGlossy/Extra Heavyweight Gloss: "1 dict dup/MediaClass(coating2)put setpagedevice"
*MediaType ExtraHeavyGlossy2/Extra Heavyweight Gloss Reloaded: "<< /MediaClass(coating2 side2) /ManualFeed true >> setpagedevice"
*MediaType Punched/Punched: "<< /MediaClass (holed) >> setpagedevice"
*MediaType Letterhead/Letterhead: "<< /MediaClass (letterhead) >> setpagedevice"
*MediaType PrePrinted/Pre-Printed: "<< /MediaClass (preprinted) >> setpagedevice"
*MediaType Envelopes/Envelope: "<< /MediaClass (envelope) /ManualFeed true >> setpagedevice"
*MediaType Other/Other Type: "<< /MediaClass (other) >> setpagedevice"
*MediaType Unspecified/Automatically Select: ""
*CloseUI: *MediaType

*OpenUI *MediaColor/Paper Color: PickOne
*OrderDependency: 46.0 AnySetup *MediaColor
*DefaultMediaColor: Unspecified
*MediaColor White/White: "1 dict dup /MediaColor (white) put setpagedevice"
*MediaColor Buff/Buff: "1 dict dup /MediaColor (buff) put setpagedevice"
*MediaColor Blue/Blue: "1 dict dup /MediaColor (blue) put setpagedevice"
*MediaColor Gray/Gray: "1 dict dup /MediaColor (gray) put setpagedevice"
*MediaColor Green/Green: "1 dict dup /MediaColor (green) put setpagedevice"
*MediaColor Ivory/Ivory: "1 dict dup /MediaColor (ivory) put setpagedevice"
*MediaColor Clear/Clear: "1 dict dup /MediaColor (clear) put setpagedevice"
*MediaColor Orange/Orange: "1 dict dup /MediaColor (orange) put setpagedevice"
*MediaColor Other/Other: "1 dict dup /MediaColor (other) put setpagedevice"
*MediaColor Pink/Pink: "1 dict dup /MediaColor (pink) put setpagedevice"
*MediaColor Red/Red: "1 dict dup /MediaColor (red) put setpagedevice"
*MediaColor Yellow/Yellow: "1 dict dup /MediaColor (yellow) put setpagedevice"
*MediaColor Goldenrod/Goldenrod: "1 dict dup /MediaColor (goldenrod) put setpagedevice"
*MediaColor Custom1/Custom Color 1: "1 dict dup /MediaColor (custom1) put setpagedevice"
*MediaColor Custom2/Custom Color 2: "1 dict dup /MediaColor (custom2) put setpagedevice"
*MediaColor Custom3/Custom Color 3: "1 dict dup /MediaColor (custom3) put setpagedevice"
*MediaColor Custom4/Custom Color 4: "1 dict dup /MediaColor (custom4) put setpagedevice"
*MediaColor Custom5/Custom Color 5: "1 dict dup /MediaColor (custom5) put setpagedevice"
*MediaColor Unspecified/Automatically Select: "1 dict dup /MediaColor null put setpagedevice"
*CloseUI: *MediaColor

*OpenUI *XRColorMode/Output Color: PickOne
*OrderDependency: 20.0 AnySetup *XRColorMode
*DefaultXRColorMode: Color
*XRColorMode Grayscale/Grayscale: "
    1 dict dup 2 dict dup /Type 26 put dup /RGBCorrection 3 put /DeviceRenderingInfo exch put setpagedevice
    currentpagedevice /DeviceRenderingInfo get /Brightness known {
        1 dict dup
        1 dict dup
        /Custom /ProcSet findresource dup
        /currentregioncode known {
            begin
            currentregioncode
            dup -1 eq { pop 0  } if
            setcmykcorrection
            end
            pop
        }{
            pop
            /CMYKCorrection 4 put
        }ifelse
        /DeviceRenderingInfo exch put
        setpagedevice
    }if

    1 dict dup /PostRenderingEnhanceDetails 2 dict dup /Type 32 put dup /EngineScreen 2 put put dup /PostRenderingEnhance true put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 4 put/DeviceRenderingInfo exch put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/RGBToK 1 put/DeviceRenderingInfo exch put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/RGBSpace 0 put/DeviceRenderingInfo exch put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 1 put/DeviceRenderingInfo exch put setpagedevice

    2 dict dup /PostRenderingEnhance true put dup /PostRenderingEnhanceDetails 2 dict dup /Type 32 put dup /REValue 1 put put setpagedevice

    1 dict dup/ProcessColorModel/DeviceGray put setpagedevice
"
*End
*XRColorMode Color/Color: "
    1 dict dup 2 dict dup /Type 26 put dup /RGBCorrection 3 put /DeviceRenderingInfo exch put setpagedevice
    currentpagedevice /DeviceRenderingInfo get /Brightness known {
        1 dict dup
        1 dict dup
        /Custom /ProcSet findresource dup
        /currentregioncode known {
            begin
            currentregioncode
            dup -1 eq { pop 0  } if
            setcmykcorrection
            end
            pop
        }{
            pop
            /CMYKCorrection 4 put
        }ifelse
        /DeviceRenderingInfo exch put
        setpagedevice
    }if

    1 dict dup /PostRenderingEnhanceDetails 2 dict dup /Type 32 put dup /EngineScreen 2 put put dup /PostRenderingEnhance true put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 4 put/DeviceRenderingInfo exch put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/RGBToK 1 put/DeviceRenderingInfo exch put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/RGBSpace 0 put/DeviceRenderingInfo exch put setpagedevice

    1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 1 put/DeviceRenderingInfo exch put setpagedevice

    2 dict dup /PostRenderingEnhance true put dup /PostRenderingEnhanceDetails 2 dict dup /Type 32 put dup /REValue 1 put put setpagedevice

    1 dict dup/ProcessColorModel/DeviceCMYK put setpagedevice
"
*End
*CloseUI: *XRColorMode

*OpenUI *Jog/Offset: PickOne
*OrderDependency: 155.0 AnySetup *Jog
*DefaultJog: None
*Jog None/No Offset: "<< /Jog 0 >> setpagedevice"
*Jog EndOfSet/Each Set: "2 dict dup/Jog 3 put currentpagedevice/OutputAttributes get 30 known{dup/OutputType(STACKER TRAY)put}if setpagedevice"
*CloseUI: *Jog

*OpenUI *XREconomode/Draft Mode: Boolean
*OrderDependency: 25.0 AnySetup *XREconomode
*DefaultXREconomode: None
*XREconomode None/Off: "1 dict dup/PostRenderingEnhanceDetails 2 dict dup/Type 32 put dup/TonerSaver 0 put put setpagedevice"
*XREconomode Draft/On: "1 dict dup/PostRenderingEnhanceDetails 2 dict dup/Type 32 put dup/TonerSaver 1 put put setpagedevice"
*CloseUI: *XREconomode

*HWMargins: 11.62 11.62 11.62 11.62
*LeadingEdge Short: ""
*DefaultLeadingEdge: Short
*MaxMediaWidth: "864"
*MaxMediaHeight: "1368"
*NonUIOrderDependency: 40.0 AnySetup *CustomPageSize
*CustomPageSize True: "
userdict /4.3PPDCompliant known
    {userdict /4.3PPDCompliant get } {false} ifelse
{ % From Print Managers complying with 4.3 PPD Spec.
  pop pop pop % discard orientation & offsets
  3 dict begin
    /PageSize [
      4 -2 roll
    ] def
  /ImagingBBox null def
  currentdict end setpagedevice
}{ % From Print Managers not complying with 4.3 PPD Spec.
  pop pop pop % discard orientation & offsets
  3 dict begin
    /PageSize [
      4 -2 roll exch
    ] def
  /ImagingBBox null def
  currentdict end setpagedevice
} ifelse
"
*End

*ParamCustomPageSize Height:       1 points 284 1368
*ParamCustomPageSize Width:        2 points 284 907
*ParamCustomPageSize WidthOffset:  3 points 0 0
*ParamCustomPageSize HeightOffset: 4 points 0 0
*ParamCustomPageSize Orientation:  5 int 1 1

*OpenGroup: XRGraphicsGroup/1. Graphics

*OpenUI *XRImageQuality/Lighten/Darken: PickOne
*OrderDependency: 26.0 AnySetup *XRImageQuality
*DefaultXRImageQuality: Normal
*XRImageQuality Lighten5/Lighten (+5): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 5 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Lighten4/Lighten (+4): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 4 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Lighten3/Lighten (+3): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 3 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Lighten2/Lighten (+2): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 2 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Lighten1/Lighten (+1): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 1 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Normal/Normal: "1 dict dup 2 dict dup/Type 26 put dup/Brightness 0 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Darken1/Darken (-1): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -1 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Darken2/Darken (-2): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -2 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Darken3/Darken (-3): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -3 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Darken4/Darken (-4): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -4 put/DeviceRenderingInfo exch put setpagedevice"
*XRImageQuality Darken5/Darken (-5): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -5 put/DeviceRenderingInfo exch put setpagedevice"
*CloseUI: *XRImageQuality

*OpenUI *XRCMYKColorSpace/CMYK Source Color: PickOne
*OrderDependency: 28.0 AnySetup *XRCMYKColorSpace
*DefaultXRCMYKColorSpace: Commercial
*XRCMYKColorSpace Commercial/Commerical: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup
  2 dict dup /Type 26 put dup /CMYKCorrection 7 put
  /DeviceRenderingInfo exch put
  setpagedevice
		} if

/Custom/ProcSet findresource/settargetpaper 2 copy known{get 3 exch exec}{pop pop}ifelse
"
*End
*XRCMYKColorSpace SWOP/SWOP: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup
  2 dict dup /Type 26 put dup /CMYKCorrection 7 put
  /DeviceRenderingInfo exch put
  setpagedevice
		} if

/Custom/ProcSet findresource/settargetpaper 2 copy known{get 3 exch exec}{pop pop}ifelse
"
*End
*XRCMYKColorSpace SNAP/SNAP: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup
  2 dict dup /Type 26 put dup /CMYKCorrection 4 put
  /DeviceRenderingInfo exch put
  setpagedevice
} if

/Custom/ProcSet findresource/settargetpaper 2 copy known{get 3 exch exec}{pop pop}ifelse
"
*End
*XRCMYKColorSpace EuroScale/EuroScale: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup
  2 dict dup /Type 26 put dup /CMYKCorrection 4 put
  /DeviceRenderingInfo exch put
  setpagedevice
} if

/Custom/ProcSet findresource/settargetpaper 2 copy known{get 2 exch exec}{pop pop}ifelse
"
*End
*XRCMYKColorSpace JapanColor/Japan Color: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup 	
  2 dict dup /Type 26 put dup /CMYKCorrection 2 put
  /DeviceRenderingInfo exch put
  setpagedevice
} if
		
/Custom/ProcSet findresource/settargetpaper 2 copy known{get 3 exch exec}{pop pop}ifelse
"
*End
*CloseUI: *XRCMYKColorSpace

*OpenUI *XRColorCorrection/Color Color Correction: PickOne
*OrderDependency: 27.0 AnySetup *XRColorCorrection
*DefaultXRColorCorrection: Auto
*XRColorCorrection Auto/Automatic: "
  1 dict dup
  2 dict dup /Type 26 put dup /RGBCorrection 3 put /DeviceRenderingInfo exch put
  setpagedevice
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    1 dict dup
    /Custom /ProcSet findresource dup
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 4 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if"
*End
*XRColorCorrection sRGB/sRGB: "
  1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 12 put/DeviceRenderingInfo exch put setpagedevice"
*End
*XRColorCorrection None/None: "
  1 dict dup
  3 dict dup /Type 26 put dup /RGBCorrection 0 put dup /CMYKCorrection 0 put
  /DeviceRenderingInfo exch put
  setpagedevice"
*End
*CloseUI: *XRColorCorrection

*OpenUI *XROutputMode: PickOne
*OrderDependency: 100.0 AnySetup *XROutputMode
*DefaultXROutputMode: HighSpeed
*XROutputMode HighSpeed/High Speed: "
    2 dict dup /HWResolution [600 600] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 2 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*XROutputMode HighQuality/High Quality: "
    2 dict dup /HWResolution [600 600] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 16 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*XROutputMode HighResolution/High Resolution: "
    2 dict dup /HWResolution [1200 1200] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 2 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*CloseUI: *XROutputMode

*% Halftone Information ===============
*DefaultHalftoneType: 5
*ScreenFreq: "85.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "{180 mul cos exch 180 mul cos add 2 div} bind"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"


*% =============== Font Information ===============

*FCacheSize 768Meg: 1441792
*FCacheSize 1024Meg: 1441792

*DefaultFont: Courier

*Font AlbertusMT-Italic: Standard "(001.001)" Standard ROM
*Font AlbertusMT-Light: Standard "(001.001)" Standard ROM
*Font AlbertusMT: Standard "(001.001)" Standard ROM
*Font AntiqueOlive-Bold: Standard "(001.002)" Standard ROM
*Font AntiqueOlive-Compact: Standard "(001.002)" Standard ROM
*Font AntiqueOlive-Italic: Standard "(001.002)" Standard ROM
*Font AntiqueOlive-Roman: Standard "(001.002)" Standard ROM
*Font Apple-Chancery: Standard "(001.002)" ExtendedRoman ROM
*Font Arial-BoldItalicMT: Standard "(001.003)" Standard ROM
*Font Arial-BoldMT: Standard "(001.003)" Standard ROM
*Font Arial-ItalicMT: Standard "(001.003)" Standard ROM
*Font ArialMT: Standard "(001.003)" Standard ROM
*Font AvantGarde-Book: Standard "(003.000)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(003.000)" Standard ROM
*Font AvantGarde-Demi: Standard "(003.000)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(003.000)" Standard ROM
*Font Bodoni-Bold: Standard "(001.003)" Standard ROM
*Font Bodoni-BoldItalic: Standard "(001.003)" Standard ROM
*Font Bodoni-Italic: Standard "(001.003)" Standard ROM
*Font Bodoni-Poster: Standard "(001.003)" Standard ROM
*Font Bodoni-PosterCompressed: Standard "(001.002)" Standard ROM
*Font Bodoni: Standard "(001.003)" Standard ROM
*Font Bookman-Demi: Standard "(003.000)" Standard ROM
*Font Bookman-DemiItalic: Standard "(003.000)" Standard ROM
*Font Bookman-Light: Standard "(003.000)" Standard ROM
*Font Bookman-LightItalic: Standard "(003.000)" Standard ROM
*Font Carta: Special "(001.001)" Special ROM
*Font Chicago: Standard "(001.000)" ExtendedRoman ROM
*Font Clarendon-Bold: Standard "(001.002)" Standard ROM
*Font Clarendon-Light: Standard "(001.002)" Standard ROM
*Font Clarendon: Standard "(001.002)" Standard ROM
*Font CooperBlack-Italic: Standard "(001.004)" Standard ROM
*Font CooperBlack: Standard "(001.004)" Standard ROM
*Font Copperplate-ThirtyThreeBC: Standard "(001.003)" Standard ROM
*Font Copperplate-ThirtyTwoBC: Standard "(001.003)" Standard ROM
*Font Coronet-Regular: Standard "(001.002)" Standard ROM
*Font Courier-Bold: Standard "(004.000)" Standard ROM
*Font Courier-BoldOblique: Standard "(004.000)" Standard ROM
*Font Courier-Oblique: Standard "(004.000)" Standard ROM
*Font Courier: Standard "(004.000)" Standard ROM
*Font Eurostile-Bold: Standard "(001.002)" Standard ROM
*Font Eurostile-BoldExtendedTwo: Standard "(001.003)" Standard ROM
*Font Eurostile-ExtendedTwo: Standard "(001.003)" Standard ROM
*Font Eurostile: Standard "(001.003)" Standard ROM
*Font Geneva: Standard "(001.000)" ExtendedRoman ROM
*Font GillSans-Bold: Standard "(001.002)" Standard ROM
*Font GillSans-BoldCondensed: Standard "(001.002)" Standard ROM
*Font GillSans-BoldItalic: Standard "(001.003)" Standard ROM
*Font GillSans-Condensed: Standard "(001.002)" Standard ROM
*Font GillSans-ExtraBold: Standard "(001.002)" Standard ROM
*Font GillSans-Italic: Standard "(001.003)" Standard ROM
*Font GillSans-Light: Standard "(001.002)" Standard ROM
*Font GillSans-LightItalic: Standard "(001.003)" Standard ROM
*Font GillSans: Standard "(001.003)" Standard ROM
*Font Goudy-Bold: Standard "(001.003)" Standard ROM
*Font Goudy-BoldItalic: Standard "(001.003)" Standard ROM
*Font Goudy-ExtraBold: Standard "(001.002)" Standard ROM
*Font Goudy-Italic: Standard "(001.003)" Standard ROM
*Font Goudy: Standard "(001.004)" Standard ROM
*Font Helvetica-Bold: Standard "(003.000)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(003.000)" Standard ROM
*Font Helvetica-Condensed-Bold: Standard "(003.000)" Standard ROM
*Font Helvetica-Condensed-BoldObl: Standard "(003.000)" Standard ROM
*Font Helvetica-Condensed-Oblique: Standard "(003.000)" Standard ROM
*Font Helvetica-Condensed: Standard "(003.000)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(003.000)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(003.000)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(003.000)" Standard ROM
*Font Helvetica-Narrow: Standard "(003.000)" Standard ROM
*Font Helvetica-Oblique: Standard "(003.000)" Standard ROM
*Font Helvetica: Standard "(003.000)" Standard ROM
*Font HoeflerText-Black: Standard "(001.000)" ExtendedRoman ROM
*Font HoeflerText-BlackItalic: Standard "(001.000)" ExtendedRoman ROM
*Font HoeflerText-Italic: Standard "(001.000)" ExtendedRoman ROM
*Font HoeflerText-Ornaments: Special "(001.001)" Special ROM
*Font HoeflerText-Regular: Standard "(001.000)" ExtendedRoman ROM
*Font JoannaMT-Bold: Standard "(001.001)" Standard ROM
*Font JoannaMT-BoldItalic: Standard "(001.001)" Standard ROM
*Font JoannaMT-Italic: Standard "(001.001)" Standard ROM
*Font JoannaMT: Standard "(001.001)" Standard ROM
*Font LetterGothic-Bold: Standard "(001.007)" Standard ROM
*Font LetterGothic-BoldSlanted: Standard "(001.006)" Standard ROM
*Font LetterGothic-Slanted: Standard "(001.005)" Standard ROM
*Font LetterGothic: Standard "(001.005)" Standard ROM
*Font LubalinGraph-Book: Standard "(001.004)" Standard ROM
*Font LubalinGraph-BookOblique: Standard "(001.004)" Standard ROM
*Font LubalinGraph-Demi: Standard "(001.004)" Standard ROM
*Font LubalinGraph-DemiOblique: Standard "(001.004)" Standard ROM
*Font Marigold: Standard "(001.001)" Standard ROM
*Font MonaLisa-Recut: Standard "(001.001)" Standard ROM
*Font Monaco: Standard "(001.001)" ExtendedRoman ROM
*Font NewCenturySchlbk-Bold: Standard "(003.000)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(003.000)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(003.000)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(003.000)" Standard ROM
*Font NewYork: Standard "(001.000)" ExtendedRoman ROM
*Font OCRBLetM: Standard "(1.05)" Standard ROM
*Font Optima-Bold: Standard "(001.007)" Standard ROM
*Font Optima-BoldItalic: Standard "(001.001)" Standard ROM
*Font Optima-Italic: Standard "(001.001)" Standard ROM
*Font Optima: Standard "(001.006)" Standard ROM
*Font Oxford: Standard "(001.001)" Standard ROM
*Font Palatino-Bold: Standard "(003.000)" Standard ROM
*Font Palatino-BoldItalic: Standard "(003.000)" Standard ROM
*Font Palatino-Italic: Standard "(003.000)" Standard ROM
*Font Palatino-Roman: Standard "(003.000)" Standard ROM
*Font StempelGaramond-Bold: Standard "(001.003)" Standard ROM
*Font StempelGaramond-BoldItalic: Standard "(001.003)" Standard ROM
*Font StempelGaramond-Italic: Standard "(001.003)" Standard ROM
*Font StempelGaramond-Roman: Standard "(001.003)" Standard ROM
*Font Symbol: Special "(001.008)" Special ROM
*Font Tekton: Standard "(001.002)" Standard ROM
*Font Times-Bold: Standard "(003.000)" Standard ROM
*Font Times-BoldItalic: Standard "(003.000)" Standard ROM
*Font Times-Italic: Standard "(003.000)" Standard ROM
*Font Times-Roman: Standard "(003.000)" Standard ROM
*Font TimesNewRomanPS-BoldItalicMT: Standard "(001.003)" Standard ROM
*Font TimesNewRomanPS-BoldMT: Standard "(001.004)" Standard ROM
*Font TimesNewRomanPS-ItalicMT: Standard "(001.003)" Standard ROM
*Font TimesNewRomanPSMT: Standard "(001.003)" Standard ROM
*Font Univers-Bold: Standard "(001.004)" Standard ROM
*Font Univers-BoldExt: Standard "(001.001)" Standard ROM
*Font Univers-BoldExtObl: Standard "(001.001)" Standard ROM
*Font Univers-BoldOblique: Standard "(001.004)" Standard ROM
*Font Univers-Condensed: Standard "(001.003)" Standard ROM
*Font Univers-CondensedBold: Standard "(001.002)" Standard ROM
*Font Univers-CondensedBoldOblique: Standard "(001.002)" Standard ROM
*Font Univers-CondensedOblique: Standard "(001.003)" Standard ROM
*Font Univers-Extended: Standard "(001.001)" Standard ROM
*Font Univers-ExtendedObl: Standard "(001.001)" Standard ROM
*Font Univers-Light: Standard "(001.004)" Standard ROM
*Font Univers-LightOblique: Standard "(001.004)" Standard ROM
*Font Univers-Oblique: Standard "(001.004)" Standard ROM
*Font Univers: Standard "(001.004)" Standard ROM
*Font Wingdings-Regular: Special "(001.001)" Special ROM
*Font ZapfChancery-MediumItalic: Standard "(003.000)" Standard ROM
*Font ZapfDingbats: Special "(002.000)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "initializing"
*Status: "idle"
*Status: "holding"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: Service Call"
*Status: "PrinterError: Drum&Toner Cartridge is Missing"
*Status: "PrinterError: No Toner"
*Status: "PrinterError: Left Hand Cover Open"
*Status: "PrinterError: Cabinet Left Hand Cover Open"
*Status: "PrinterError: Duplex Docking Cover Open"
*Status: "PrinterError: Side Tray Docking Unit Open"
*Status: "PrinterError: Side Tray Hand Cover Open"
*Status: "PrinterError: Tray Lifter Failed"
*Status: "PrinterError: Paper Jam"
*Status: "PrinterError: Paper Jam at Fuser"
*Status: "PrinterError: Paper Jam at Registration Roller"
*Status: "PrinterError: Paper Jam at Duplex Module"
*Status: "PrinterError: Paper Jam at Duplex Tray"
*Status: "PrinterError: Paper Jam at Tray1"
*Status: "PrinterError: Paper Jam at Tray2"
*Status: "PrinterError: Paper Jam at Tray3"
*Status: "PrinterError: Paper Jam at Tray4"
*Status: "PrinterError: Paper Jam at Manual Feed Tray"
*Status: "PrinterError: Paper Jam at Side Tray"
*Status: "PrinterError: Center bin is Full"
*Status: "PrinterError: Duplex Module Fail"
*Status: "PrinterError: Tray is Missing"
*Status: "PrinterError: Any Trays are Missing"
*Status: "PrinterError: Out of Paper in All Trays"
*Status: "PrinterError: Out of Paper"
*Status: "PrinterError: Out of Paper in Maunal Feed Tray"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Service Call"
*PrinterError: "Drum&Toner Cartridge is Missing"
*PrinterError: "No Toner"
*PrinterError: "Left Hand Cover Open"
*PrinterError: "Cabinet Left Hand Cover Open"
*PrinterError: "Duplex Docking Cover Open"
*PrinterError: "Side Tray Docking Unit Open"
*PrinterError: "Side Tray Hand Cover Open"
*PrinterError: "Tray Lifter Failed"
*PrinterError: "Paper Jam"
*PrinterError: "Paper Jam at Fuser"
*PrinterError: "Paper Jam at Registration Roller"
*PrinterError: "Paper Jam at Duplex Module"
*PrinterError: "Paper Jam at Duplex Tray"
*PrinterError: "Paper Jam at Tray1"
*PrinterError: "Paper Jam at Tray2"
*PrinterError: "Paper Jam at Tray3"
*PrinterError: "Paper Jam at Tray4"
*PrinterError: "Paper Jam at Manual Feed Tray"
*PrinterError: "Paper Jam at Side Tray"
*PrinterError: "Center bin is Full"
*PrinterError: "Duplex Module Fail"
*PrinterError: "Tray is Missing"
*PrinterError: "Any Trays are Missing"
*PrinterError: "Out of Paper in All Trays"
*PrinterError: "Out of Paper"
*PrinterError: "Out of Paper in Maunal Feed Tray"


*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "EtherTalk"
*Source: "RemotePrinter"
*Source: "PrintServer"
*Source: "LPR"
*Source: "Internal"

*% Color Separation Information =====================
*DefaultGuaranteedMaxSeparations: 1
*GuaranteedMaxSeparations 4: ""
*GuaranteedMaxSeparations 3: ""
*GuaranteedMaxSeparations 2: ""
*GuaranteedMaxSeparations 1: ""
*?GuaranteedMaxSeparations: "
    currentpagedevice /MaxSeparations get ="
*End